{"version":3,"file":"ika.js","mappings":"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","sources":["webpack://ikajs/webpack/bootstrap","webpack://ikajs/./src/types/buffer.ts","webpack://ikajs/./src/types/debug.ts","webpack://ikajs/webpack/runtime/define property getters","webpack://ikajs/webpack/runtime/hasOwnProperty shorthand","webpack://ikajs/./src/core/buf.ts","webpack://ikajs/./src/common/QueueLock.ts","webpack://ikajs/./src/common/index.ts","webpack://ikajs/./src/debug/messages.ts","webpack://ikajs/./src/debug/locale/en-gb.ts","webpack://ikajs/./src/debug/index.ts","webpack://ikajs/./src/types/events.ts","webpack://ikajs/./src/core/bind.ts","webpack://ikajs/./src/components/sdc.ts","webpack://ikajs/./src/components/me/mapChildren.ts","webpack://ikajs/./src/common/shortcuts.ts","webpack://ikajs/./src/components/me/setBind.ts","webpack://ikajs/./src/components/me/postMappingOperations.ts","webpack://ikajs/./src/components/me/applyBindingDictionary.ts","webpack://ikajs/./src/components/me/index.ts","webpack://ikajs/./src/components/me/validateBd.ts","webpack://ikajs/./src/core/sbr.ts","webpack://ikajs/./src/core/reg.ts","webpack://ikajs/./src/components/a.ts","webpack://ikajs/./src/components/bf.ts","webpack://ikajs/./src/components/import.ts","webpack://ikajs/./src/components/route.ts","webpack://ikajs/./src/core/res.ts","webpack://ikajs/./src/components/IkaComponent/addAttributeListener.ts","webpack://ikajs/./src/components/IkaComponent/setComponentTemplate.ts","webpack://ikajs/./src/components/IkaComponent/processEvent.ts","webpack://ikajs/./src/components/IkaComponent/addEventListeners.ts","webpack://ikajs/./src/components/IkaComponent/ikaComponent.ts","webpack://ikajs/./src/components/IkaComponent/defineIkaComponent.ts","webpack://ikajs/./src/ika.ts","webpack://ikajs/./src/core/init.ts","webpack://ikajs/./src/components/b.ts","webpack://ikajs/./src/components/ab.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","export type BufferUpdate = {\n    n: string, // Node ID\n    type: UpdateType.PROP | UpdateType.ATTR, // \n    k: string,\n    v: string | number\n}\n\nexport type BufferObject = {\n    [nodeId: string]: {\n        [type in UpdateType]: {\n            [key: string]: Array<string | number>\n        }\n    }\n}\n\nexport enum UpdateType {\n    'PROP',\n    'ATTR'\n}","export enum NodeEvent {\n    Registered = 'registered',\n    Deregistered = 'deregistered',\n    AlreadyRegistered = 'already-registered',\n    NodeAlreadyHasId = 'node-already-has-id',\n}\nexport enum BindEvent {\n    BindingElementHasNoBindKey = 'binding-element-has-no-bind-key',\n    InitiatingBinding = 'initiating-binding',\n    ReceivedBindingRequest = 'received-binding-request',\n    RegisteringBinding = 'registering-binding',\n    DeregisteringBinding = 'deregistering-binding',\n    Subscribed = 'subscribed',\n    BindingValueChanged = 'binding-value-changed',\n    ReceivedBindingUpdate = 'received-binding-update',\n    BindingPermissionDenied = 'binding-permission-denied',\n    IkaABReceivedBindingUpdate = 'ika-ab-received-binding-update',\n    NoBindingValueUpdateHandler = 'no-binding-value-update-handler',\n    NoParentFound = 'binding-element-no-parent-found',\n    UnregisteredNodeSubscribing = 'unregistered-node-subscribing',\n}\n\nexport enum ComponentEvent {\n    Building = 'building',\n    Built = 'built',\n    NoStateDataWhenInitialising = 'no-state-data-when-initialising',\n    ReceivedEvent = 'received-event',\n    ReceivedEventNotFromElement = 'received-event-not-from-element',\n    ReceviedComponentCallNoDetail = 'received-component-call-no-detail',\n}\n\nexport enum IkaStatus {\n    Initialising = 'initialising-ika',\n    BufferStart = 'buffer-start',\n}\n\nexport enum UnexpectedError {\n    NotAttributeMutation = 'not-attribute-mutation',\n    UnwatchedAttribute = 'unwatched-attribute',\n    MutationTargetUnexpected = 'mutation-target-unexpected',\n}\n\nexport enum ImportEvent {\n    ImportedNodes = 'imported-nodes',\n    RemovedNode = 'mut-observer-removed-node',\n    ImportWithSameTemplateID = 'import-with-same-template-id',\n    ImportComponentWithNoMD5 = 'import-component-with-no-md5',\n}\n\nexport enum MapElementEvent {\n    AwaitCustomElementDefinitionTimeout = 'await-timeout',\n    MappingInitiated = 'mapping-initiated',\n    NoBindingDictionary = 'no-bd',\n    UnexpectedBDType = 'unexpected-bd-type',\n    UnexpectedBDStateObject = 'unexpected-bd-state-object',\n    UnexpectedBDOutputType = 'unexpected-bd-output-type',\n    UnexpectedBDOutputValue = 'unexpected-bd-output-val',\n    NoMapFrom = 'no-map-from',\n    UnexpectedMFType = 'unexpected-mf-type',\n    NestedIkaMEHasISAttr = 'nested-ika-me-has-is-attr',\n    StateMappingNotOnIkaComponent = 'state-mapping-not-on-ika-component',\n}\n\nexport enum BufferEvent {\n    UnexpectedData = 'unexpected-data',\n}\n\nexport enum RouterEvent {\n    OverwritingKey = 'overwriting-router-key',\n}\n\nexport enum ResourceManagerEvent {\n    HasCachedData = 'has-cached-data',\n    MakingFetch = 'making-fetch',\n    FetchFailed = 'fetch-failed',\n    WritingIntoCache = 'writing-into-cache',\n    RequesterHasNoId = 'requester-has-no-id',\n}\n\n\nexport type DebugFilter =\n    ComponentEvent | BindEvent | NodeEvent | IkaStatus | UnexpectedError |\n    ImportEvent | MapElementEvent | BufferEvent | RouterEvent | ResourceManagerEvent","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import { ika } from '../ika'\nimport { BufferObject, BufferUpdate, UpdateType } from '../types/buffer'\nimport { BufferEvent } from '../types/debug'\n\nexport class IkaBuffer {\n    #buffer: BufferObject = {}\n    constructor() { }\n\n    debug() {\n        return {\n            buffer: this.#buffer\n        }\n    }\n\n    push(update: BufferUpdate) {\n        if (!['string', 'number', 'boolean'].includes(typeof update.v)) {\n            ika.print(BufferEvent.UnexpectedData, update)\n            return\n        }\n        const buf = this.#buffer\n\n        function checkAndInit(o, k: string | number, i) {\n            if (!o[k]) { o[k] = i }\n        }\n        checkAndInit(buf, update.n, {})\n        checkAndInit(buf[update.n], update.type, {})\n        checkAndInit(buf[update.n][update.type], update.k, [])\n\n        buf[update.n][update.type][update.k].push(update.v)\n    }\n\n\n\n    getBuffer() {\n        optimiseBuffer()\n        return cloneBuffer(this.#buffer)\n\n        function cloneBuffer(cloneFrom: BufferObject) {\n            const buffer: BufferObject = {}\n            Object.entries(cloneFrom).forEach(([nodeId, typeGrouping]) => {\n                buffer[nodeId] = {} as { [type in UpdateType]: {} }\n                Object.entries(typeGrouping).forEach(([type, keyArr]) => {\n                    buffer[nodeId][type] = {};\n                    Object.entries(keyArr).forEach(([k, v]) => {\n                        buffer[nodeId][type][k] = [...v]\n                    })\n                })\n            })\n            return buffer\n        }\n\n        function optimiseBuffer() {\n\n        }\n    }\n\n    resetBuffer() { this.#buffer = {} }\n}\n\n\n\nexport function processBuffer() {\n    Object.entries(ika.buffer.getBuffer()).forEach(([nodeId, updates]) => {\n        const target = ika.reg.getNodeFromId(nodeId)\n\n        // This passed Buffer is without any optimisation - should receive val as a single value only. \n        UpdateType.PROP in updates\n            && Object.entries(updates[UpdateType.PROP]).forEach(([key, val]) => {\n                target[key] = val.pop()\n            })\n        UpdateType.ATTR in updates && target.nodeType == Node.ELEMENT_NODE\n            && Object.entries(updates[UpdateType.ATTR]).forEach(([key, val]) => {\n                (target as Element).setAttribute(key, val.pop().toString())\n            })\n\n    })\n\n    ika.buffer.resetBuffer()\n}\n","export class QueueLock {\n    #queue: Array<() => void>;\n    constructor() { this.#queue = [] }\n\n    queue() {\n        const queuePromise: Promise<void> = new Promise((resolve, reject) => {\n            this.#queue.push(resolve)\n            this.#queue.length == 1 && resolve()\n        });\n\n        return queuePromise\n    }\n\n    next() {\n        this.#queue.shift()\n        this.#queue[0] && this.#queue[0]()\n    }\n}","export { QueueLock } from './QueueLock'\n\nexport function getEventSourceAndTagName(e: Event) {\n    const eventSource = e.composedPath()[0]\n    const tagName = eventSource instanceof HTMLElement ? eventSource.tagName.toLowerCase() : 'NOT_AN_HTML_ELEMENT'\n    return { eventSource, tagName }\n}","import { IkaDebugStyles } from \".\"\nimport { BindEvent, ComponentEvent, DebugFilter, IkaStatus, NodeEvent } from \"../types/debug\"\nimport DEBUG_MESSAGES_EN_GB from './locale/en-gb'\n\ntype DebugMessageFunction = (...params: any[]) => DebugMessageReturn\ntype DebugMessageReturn = { s: string, css?: Array<string>, o?: Array<any>, mode?: 'debug' | 'info' | 'warn' | 'error' }\n\nexport function buildIndex<T extends { [key in DebugFilter]: DebugMessageFunction }>(i: T) { return i }\n\ntype LocaleCodes = 'en-gb'\ntype DebugMessageDictionary = { [locale in LocaleCodes]: typeof DEBUG_MESSAGES_EN_GB }\n\nconst DEBUG_MESSAGES: DebugMessageDictionary = {\n    'en-gb': DEBUG_MESSAGES_EN_GB\n}\n\nexport function printDebugMessage<C extends DebugFilter>(code: C, ...params: Parameters<typeof DEBUG_MESSAGES_EN_GB[C]>) {\n    const locale = IKA_CONFIG.locale || 'en-gb'\n    const colours = {\n        debug: '#6aaff8',\n        warn: 'orange',\n        error: 'red'\n    }\n\n    if (IKA_CONFIG.verbose) {\n        if (IKA_CONFIG?.suppressMessages?.includes(code) || (IKA_CONFIG?.filterMessages && !IKA_CONFIG?.filterMessages?.includes(code))) return;\n\n        const { s, css, o, mode } = DEBUG_MESSAGES[locale][code].apply(null, params)\n\n        const args = [`color: ${colours[mode || 'debug']}; font-weight: 600`, 'color: unset; font-weight: unset']\n\n        for (const match of s.matchAll(/(%[co])/g)) {\n            const target = match[0] == '%c' ? css : o\n            if (!Array.isArray(target)) return\n            args.push(target[0]);\n            target.shift()\n        }\n\n        console[mode || 'debug'](`%c<${mode || 'debug'}>%c ` + s, ...args)\n    }\n}\n\n","import { IkaDebugStyles } from \"..\"\nimport { getEventSourceAndTagName } from \"../../common\"\nimport IkaAttributeBind from \"../../components/ab\"\nimport IkaMapElements from \"../../components/me\"\nimport { BindingDictionary } from \"../../components/me/types\"\nimport { NodeEvent, BindEvent, ComponentEvent, IkaStatus, UnexpectedError, ImportEvent, MapElementEvent, BufferEvent, RouterEvent, ResourceManagerEvent } from \"../../types/debug\"\nimport { buildIndex } from \"../messages\"\nconst INDENT = `        `\n\nconst en_gb = buildIndex({\n    [NodeEvent.Registered](node: Element, id: string) {\n        return {\n            s: `Registered node %c<${node.tagName.toLowerCase()}>%c with ID %c${id}%c\\n` +\n                `${INDENT}Element: %o`,\n            o: [node],\n            css: [IkaDebugStyles.ComponentName, 'color: unset', IkaDebugStyles.NodeID, IkaDebugStyles.Unset]\n        }\n    },\n    [NodeEvent.Deregistered](tagName: string, id: string) {\n        return {\n            s: `Node %c<${tagName}>%c with ID %c${id}%c is deregistered`,\n            css: [IkaDebugStyles.ComponentName, 'color: unset', IkaDebugStyles.NodeID, 'color: unset']\n        }\n    },\n    [NodeEvent.AlreadyRegistered](nodeId: string, node: Node) {\n        return {\n            s: `Another registration request is made for a node. It's currently registered as %c${nodeId}\\n%o`,\n            css: [IkaDebugStyles.NodeID],\n            o: [node],\n            mode: 'warn'\n        }\n    },\n    [NodeEvent.NodeAlreadyHasId](id: string, element: Element) {\n        return {\n            s: `Node id already set to %c${id}%c on component %c<${element.tagName.toLowerCase()}>\\n%o`,\n            o: [element],\n            css: [IkaDebugStyles.NodeID, 'color: unset', IkaDebugStyles.ComponentName, 'color: unset'],\n            mode: 'error'\n        }\n    },\n    [BindEvent.BindingElementHasNoBindKey](element: Element) {\n        return {\n            s: `A binding component does not have a bind key attribute.\\n${INDENT}Element: $o`,\n            o: [element],\n            mode: 'warn'\n        }\n    },\n    [BindEvent.InitiatingBinding](componentName: string, parentName: string) {\n        return {\n            s: `Component %c<${componentName}>%c is sending bind registration to parent %c<${parentName}>`,\n            css: [IkaDebugStyles.ComponentName, IkaDebugStyles.Unset, IkaDebugStyles.ComponentName]\n        }\n    },\n    [BindEvent.ReceivedBindingRequest]() { return { s: '' } },\n    [BindEvent.RegisteringBinding](key: string, componentName: string) {\n        return {\n            s: `Registering binding to %c\"${key}\"%c by component %c<${componentName}>`,\n            css: [IkaDebugStyles.VariableValue, 'color: unset', IkaDebugStyles.ComponentName]\n        }\n    },\n    [BindEvent.DeregisteringBinding](key: string, componentName: string) {\n        return {\n            s: `Deregistering binding to %c\"${key}\"%c by component %c<${componentName}>`,\n            css: [IkaDebugStyles.VariableValue, 'color: unset', IkaDebugStyles.ComponentName]\n        }\n    },\n    [BindEvent.Subscribed](nodeId: string, key: string) {\n        return {\n            s: `Node %c${nodeId}%c is subscribed to bind key %c\"${key}\"%c`,\n            css: [IkaDebugStyles.NodeID, IkaDebugStyles.Unset, IkaDebugStyles.VariableValue, IkaDebugStyles.Unset]\n        }\n    },\n    [BindEvent.BindingPermissionDenied](nodeId: string, key: string) {\n        return {\n            s: `Bind by node %c${nodeId} onto key \"%c${key}%c\" failed as this node is not permissioned.`,\n            css: [IkaDebugStyles.NodeID, 'color: unset', IkaDebugStyles.VariableValue, 'color: unset']\n        }\n    },\n    [BindEvent.BindingValueChanged](key: string, source: string, value: any, callbackCount: number) {\n        const stringTypes = new Set(['string', 'number', 'boolean', 'undefined', 'null'])\n        const valueDisplay = stringTypes.has(typeof value) ? `\"%c%o%c\"` : `%o`\n        return {\n            s: `Bind \"%c${key}%c\" changed, triggering ${callbackCount} callbacks\\n${INDENT}Source: %c%o%c\\n${INDENT}Value: ${valueDisplay}`,\n            o: [source, value],\n            css: [IkaDebugStyles.VariableValue, IkaDebugStyles.Unset, IkaDebugStyles.ComponentName, IkaDebugStyles.Unset, IkaDebugStyles.VariableValue, IkaDebugStyles.Unset]\n        }\n    },\n    [BindEvent.ReceivedBindingUpdate](componentName: string, key: string) {\n        return {\n            s: `%c<${componentName}>%c received binding update for key %c\"${key}\"`,\n            css: [IkaDebugStyles.ComponentName, IkaDebugStyles.Unset, IkaDebugStyles.VariableValue]\n        }\n    },\n    [BindEvent.IkaABReceivedBindingUpdate](ref: IkaAttributeBind, bind: string, value, attributes: Array<string>, targets: { [id: string]: Element }) {\n        const children = Object.values(targets)\n        return {\n            s: `%c<ika-ab>%c received binding update.\\n` +\n                `${INDENT}Bind: %c\"${bind}\"%c\\n` +\n                `${INDENT}Value: %o\\n` +\n                `${INDENT}Attributes: ${attributes.length}, ${attributes.join(', ')}\\n` +\n                `${INDENT}Targets: ${children.length}, %o\\n` +\n                `${INDENT}Source: %o`,\n            o: [value, children, ref],\n            css: [IkaDebugStyles.ComponentName, IkaDebugStyles.Unset]\n        }\n    },\n    [BindEvent.NoBindingValueUpdateHandler](tagName: string) {\n        return {\n            s: `Component %c<${tagName}>%c did not implement state change callback.`,\n            css: [IkaDebugStyles.ComponentName, 'color: unset'],\n            mode: 'warn'\n        }\n    },\n    [BindEvent.NoParentFound](element: Element) {\n        return {\n            s: `Could not register bind for %c<${element.tagName.toLowerCase()}>%c as no parent was found.`,\n            css: [IkaDebugStyles.ComponentName, 'color: unset'],\n            mode: 'warn'\n        }\n    },\n    [BindEvent.UnregisteredNodeSubscribing](k: string) {\n        return {\n            s: `Subscribing to bind must specify bind key, node ID, and a callback function. Check if the node requesting the binding has registered for a node ID.\\nKey: ${k}`,\n            mode: 'error'\n        }\n    },\n    [ComponentEvent.Building](component: Element) {\n        return {\n            s: `Building component %c<${component.tagName.toLowerCase()}>%c\\n${INDENT}Component: %o`,\n            o: [component],\n            css: [IkaDebugStyles.ComponentName, IkaDebugStyles.Unset]\n        }\n    },\n    [ComponentEvent.NoStateDataWhenInitialising](componentName: string, instanceSpace: string) {\n        return {\n            s: `No data is available to initialise states for component %c<${componentName}>%c in instance space \"${instanceSpace}\".`,\n            css: [IkaDebugStyles.ComponentName, 'color: unset', IkaDebugStyles.VariableValue, 'color: unset']\n        }\n    },\n    [ComponentEvent.Built](component: Element) {\n        return {\n            s: `Component %c<${component.tagName.toLowerCase()}>%c is constructed.\\n${INDENT}Component: %o`,\n            o: [component],\n            css: [IkaDebugStyles.ComponentName, 'color: unset']\n        }\n    },\n    [ComponentEvent.ReceivedEvent](componentName: string, e: Event) {\n        const { eventSource, tagName } = getEventSourceAndTagName(e)\n        const customType: string = e instanceof CustomEvent ? e.detail?.type : null\n        const customTypeMsg = customType ? `${INDENT}Type: %c${customType}%c\\n` : ''\n        return {\n            s: `Component %c<${componentName}>%c received event %c${e.type}%c\\n${customTypeMsg}${INDENT}Source: %o`,\n            o: [eventSource],\n            css: [IkaDebugStyles.ComponentName, 'color: unset', IkaDebugStyles.VariableValue, 'color: unset', IkaDebugStyles.VariableValue, 'color: unset']\n        }\n    },\n    [ComponentEvent.ReceivedEventNotFromElement](eventSource: EventTarget) {\n        return { s: `Received an event that did not originate from an HTMLElement. No action taken.`, o: [eventSource] }\n    },\n    [ComponentEvent.ReceviedComponentCallNoDetail](componentName: string, e: Event) {\n        const { eventSource, tagName } = getEventSourceAndTagName(e)\n        return {\n            s: `%c<${componentName}>%c received component call from %c<${tagName}>%c but it did not contain detail.\\nEvent: %o`,\n            o: [e]\n        }\n    },\n    [IkaStatus.Initialising](versionNumber: string) {\n        return { s: `Ika initialising... v${versionNumber}` }\n    },\n    [IkaStatus.BufferStart]() {\n        return {\n            s: 'Buffer processing started at ' + Math.round(performance.measure('ika-buf-started', 'ika-init').duration) + ' ms'\n        }\n    },\n    [UnexpectedError.NotAttributeMutation](m: MutationRecord) {\n        return { s: `Unexpected mutation record: This is not a attribute mutation.\\n%o`, o: [m], mode: 'error' }\n    },\n    [UnexpectedError.UnwatchedAttribute](m: MutationRecord) {\n        return { s: `Unexpected mutation record: This attribute change is not watched and has no handler.\\n%o`, o: [m], mode: 'error' }\n    },\n    [UnexpectedError.MutationTargetUnexpected](m: MutationRecord) {\n        return { s: `Unexpected mutation record: The mutation target is not the expected Ika component.\\n%o`, o: [m], mode: 'error' }\n    },\n    [ImportEvent.ImportWithSameTemplateID](templateId: string, importPath: string) {\n        return {\n            s: `Import with same template ID detected: Importing %c\"${templateId}\"%c from %c\"${importPath}\"%c.`,\n            css: [IkaDebugStyles.VariableValue, IkaDebugStyles.Unset, IkaDebugStyles.VariableValue, IkaDebugStyles.Unset],\n            mode: 'warn'\n        }\n    },\n    [ImportEvent.ImportComponentWithNoMD5](path: string) {\n        return {\n            s: `Importing component from \"%c${path}\"%c but no MD5 was provided. Consider adding the MD5 hash to the component you are importing to detect import conflicts.`,\n            css: [IkaDebugStyles.VariableValue, IkaDebugStyles.Unset],\n            mode: 'warn'\n        }\n    },\n    [ImportEvent.RemovedNode](path: string, nodes: Array<MutationRecord>, record: { t: Array<Node>, n: Array<Node> }) {\n        const msg = record.n.length == 0\n            ? `No nodes left in DOM are associated with this import. Template and script nodes will now be removed.`\n            : `${record.n.length} nodes associated with this import are left in DOM.`\n        return {\n            s: `${nodes.length} import related nodes were removed from DOM.\\n${msg}\\nPath: %c${path}%c\\nRemoved: %o\\n\\nRecord: %o`,\n            o: [nodes.flatMap(mr => mr.removedNodes.values()), record],\n            css: [IkaDebugStyles.NodeID, IkaDebugStyles.Unset]\n        }\n    },\n    [ImportEvent.ImportedNodes](path: string, nodes: { t: Array<Node>, n: Array<Node> }) {\n        return {\n            s: `Loaded content from HTML, registered ${nodes.t.length} templates and ${nodes.n.length} nodes.\\nPath: %c${path}%c\\nNodes: %o`,\n            o: [nodes],\n            css: [IkaDebugStyles.NodeID, IkaDebugStyles.Unset],\n        }\n    },\n    [MapElementEvent.AwaitCustomElementDefinitionTimeout](elementName: string, timeoutLimit: number) {\n        return {\n            s: `Custom element %c<${elementName}>%c was not defined within ${timeoutLimit}ms.\\nThe element will still be mapped when it's defined, but check if the element name is correct.`,\n            css: [IkaDebugStyles.ComponentName, IkaDebugStyles.Unset, IkaDebugStyles.VariableValue, IkaDebugStyles.Unset],\n            mode: 'warn'\n        }\n    },\n    [MapElementEvent.MappingInitiated](count: number, componentName: string) {\n        return {\n            s: `%c<ika-me>%c is creating ${count} %c<${componentName}>%c elements...`,\n            css: [IkaDebugStyles.ComponentName, IkaDebugStyles.Unset, IkaDebugStyles.ComponentName, IkaDebugStyles.Unset]\n        }\n    },\n    [MapElementEvent.NoBindingDictionary](stateVar: any) {\n        return {\n            s: `No binding dictionary is supplied to %c<ika-me>%c, and it will therefore be unable to map elements.\\nGlobal state variable value: %o`,\n            css: [IkaDebugStyles.ComponentName, IkaDebugStyles.Unset],\n            o: [stateVar],\n            mode: 'error',\n        }\n    },\n    [MapElementEvent.UnexpectedBDType](bdFunction: any) {\n        return {\n            s: `Unexpected binding dictionary: the type supplied is %c\"${typeof bdFunction}\"%c.`,\n            css: [IkaDebugStyles.VariableValue, IkaDebugStyles.Unset],\n            mode: 'error'\n        }\n    },\n    [MapElementEvent.UnexpectedBDStateObject]() {\n        return {\n            s: `Unexpected binding dictionary state object: it should be a KV of functions.`,\n            mode: 'error'\n        }\n    },\n    [MapElementEvent.UnexpectedBDOutputType](output) {\n        return {\n            s: `Unexpected output from binding dictionary transformation function. Expecting KV pairs, got %c\"${typeof output}\"%c`,\n            css: [IkaDebugStyles.VariableValue, IkaDebugStyles.Unset],\n            mode: 'error'\n        }\n    },\n    [MapElementEvent.UnexpectedBDOutputValue](k: string, v) {\n        return {\n            s: `Unexpected value from binding dictionary transformation output: expecting string or number for key %c\"${k}\"%c, got %c\"${typeof v}\"%c.`,\n            css: [IkaDebugStyles.VariableValue, IkaDebugStyles.Unset, IkaDebugStyles.VariableValue, IkaDebugStyles.Unset],\n            mode: 'error'\n        }\n    },\n    [MapElementEvent.NoMapFrom](mfKey: string) {\n        return {\n            s: `%c<ika-me>%c: No map from array under key \"${mfKey}\". %c<ika-me>%c will clear its children.`\n        }\n    },\n    [MapElementEvent.UnexpectedMFType](mappingValue: any) {\n        return {\n            s: `%c<ika-me>%c is asked to map from a value that is not an array, received %c\"${typeof mappingValue}\"%c.\\nValue: %o`,\n            css: [IkaDebugStyles.ComponentName, IkaDebugStyles.Unset, IkaDebugStyles.VariableValue],\n            o: [mappingValue],\n            mode: 'error'\n        }\n    },\n    [MapElementEvent.NestedIkaMEHasISAttr](element: IkaMapElements) {\n        return {\n            s: `A nested %c<ika-me>%c element has an instance space attribute. It inherits the top level instance space, and its mf attribute is the sub key in the mapped object.\\n%o`,\n            css: [IkaDebugStyles.ComponentName, IkaDebugStyles.Unset],\n            o: [element],\n            mode: 'error'\n        }\n    },\n    [MapElementEvent.StateMappingNotOnIkaComponent](bd: BindingDictionary, elementName: string) {\n        return {\n            s: `The binding dictionary includes state mapping, but the element mapped is not an Ika component, and therefore cannot be set states.` +\n                `\\nBinding dictionary: %o\\nElement mapped: ${elementName}`,\n            o: [bd],\n            mode: 'warn'\n        }\n    },\n    [BufferEvent.UnexpectedData](update: { k: string, v }) {\n        return {\n            s: `Unexpected data type being pushed to Ika Buffer, push rejected.\\n%o`,\n            o: [update],\n            mode: 'error'\n        }\n    },\n    [RouterEvent.OverwritingKey](key: string, router: HTMLElement) {\n        return {\n            s: `A router already exists under the key ${key}. Overwriting this registration now with ${router}`,\n            mode: 'warn'\n        }\n    },\n    [ResourceManagerEvent.FetchFailed](url: RequestInfo | URL, options: RequestInit, status: number, body: string) {\n        return {\n            s: `Fetching resource failed.\\nURL: %o\\nOptions: %o\\nStatus: ${status}\\nBody: ${body}`,\n            o: [url, options],\n            mode: 'error'\n        }\n    },\n    [ResourceManagerEvent.HasCachedData](url: RequestInfo | URL, options: RequestInit) {\n        return {\n            s: `Cached data found for the requested resource.\\nURL: %o\\nOptions: %o`,\n            o: [url],\n        }\n    },\n    [ResourceManagerEvent.MakingFetch](url: RequestInfo | URL, options: RequestInit) {\n        return {\n            s: `Resource not found in cached data, making fetch request.\\nURL: %o\\nOptions: %o`,\n            o: [url, options]\n        }\n    },\n    [ResourceManagerEvent.WritingIntoCache](url: RequestInfo | URL, options: RequestInit, data, fromStatic?: boolean) {\n        return {\n            s: `Resource loaded from ${fromStatic ? 'static resource' : 'network'}, writing into cache.\\nURL: %o\\nOptions: %o\\nData: %o`,\n            o: [url, options, data]\n        }\n    },\n    [ResourceManagerEvent.RequesterHasNoId](url: string) {\n        return {\n            s: `A node that does not have an ID requested a resource from Resource Manager.\\nURL: ${url}`,\n            mode: 'warn'\n        }\n    }\n})\n\nexport default en_gb;","import { IkaComponent } from \"../ika\";\nexport { printDebugMessage } from \"./messages\";\n\nexport default function (s: string, css?: Array<string>, objects?: Array<any>) {\n    if (!IKA_CONFIG.verbose) return;\n\n    const formatting = ['color: #6aaff8; font-weight: 600', 'color: unset; font-weight: unset']\n    const args = [...formatting]\n    for (const match of s.matchAll(/(%[co])/g)) {\n        const target = match[0] == '%c' ? css : objects\n        args.push(target[0]);\n        target.shift()\n    }\n\n    console.debug(`%c‹debug› %c` + s, ...args)\n}\n\nexport enum IkaDebugStyles {\n    ComponentName = 'color: #60d38e',\n    VariableValue = 'color: #ab49f5',\n    NodeID = 'color: #999',\n    Unset = 'color: unset'\n}\n\nexport function attachDebugButton(ref: IkaComponent) {\n    const debugBox = document.createElement('div')\n    debugBox.setAttribute('style', 'display: var(--global-debug-button-display)')\n    const btn = document.createElement('button');\n    btn.innerHTML = ref.tagName.toLowerCase()\n    btn.setAttribute('style',\n        `margin: 0.5rem 0; background: #666; color: #eee; padding: 0.25rem; border: 1px solid #222; cursor: pointer;`)\n    btn.onclick = (e) => { e.stopPropagation(); ref.debugPrint() }\n    debugBox.append(btn);\n    (ref.shadowRoot ?? ref).append(debugBox)\n}","import { IkaComponent } from \"../ika\";\nimport BindingComponent from \"../core/bind\"\nimport IkaSDC from \"../components/sdc\";\n\nexport enum CustomEventTypes {\n    ComponentCall = 'ika-component-call',\n    GetTopLevelIkaME = `ika-me-seek`\n}\n\nexport namespace ComponentCall {\n    export enum EventType {\n        RegisterBind = 'REGISTER_BIND',\n        DeregisterBind = 'DEREGISTER_BIND',\n        EstablishChain = 'ESTABLISH_CHAIN',\n        GetComponent = 'GET_PARENT',\n        InvokeFunction = 'INVOKE_FUNCTION',\n\n    }\n\n    export type EventDetails =\n        EventDetail.DeregisterBind |\n        EventDetail.RegisterBind |\n        EventDetail.EstablishChain |\n        EventDetail.GetComponent |\n        EventDetail.InvokeFunction\n\n    export namespace EventDetail {\n        type BaseEventDetails = {\n            type: EventType,\n            nodeId: string,\n        }\n\n        export type EstablishChain = BaseEventDetails & {\n            type: EventType.EstablishChain\n            payload: { issuer: IkaSDC }\n        }\n        export type GetComponent = BaseEventDetails & {\n            type: EventType.GetComponent,\n            payload: {\n                cb: (c: IkaComponent) => void,\n                leap?: number,\n                retry?: number\n            }\n        }\n\n        export type RegisterBind = BaseEventDetails & {\n            type: EventType.RegisterBind,\n            payload: {\n                bind: string,\n                issuer: BindingComponent,\n                leap?: number,\n                retry?: number\n            }\n        }\n        export type DeregisterBind = Omit<RegisterBind, 'type'> & { type: EventType.DeregisterBind }\n\n        export type InvokeFunction = {\n            type: EventType.InvokeFunction,\n            payload: {\n                invocationEvent: Event,\n                key: string,\n                leap?: number\n                params?\n            }\n        }\n    }\n}\n\nexport namespace BindingEvent {\n    export type ValueUpdate<T = any> = { k: string, v: T }\n}","import { IkaDebugStyles } from \"../debug\";\nimport { elementIsIkaComponent, ika, IkaComponent } from \"../ika\";\nimport { BindEvent, NodeEvent } from \"../types/debug\";\n\nimport { ComponentCall, CustomEventTypes, BindingEvent } from \"../types/events\";\n\nexport default class BindingComponent extends HTMLElement {\n    #nodeId = null\n    #component: IkaComponent = null\n\n    constructor() {\n        super();\n        const regTargets = this.getRegistrationTargets()\n        regTargets.forEach(n =>\n            ika.reg.registerNode(this, n, this.registeredCallback)\n        )\n    }\n\n    getRegistrationTargets(): Array<Element> {\n        return [this]\n    }\n\n    registeredCallback(id: string, n: Element, requestor: BindingComponent) {\n        requestor.setNodeId(id)\n        requestor.registerBindsWithParentComponent.bind(requestor)()\n    }\n\n    setComponent(t: IkaComponent) { this.#component = t }\n    getComponent() { return this.#component }\n\n    setNodeId(id: string) {\n        this.#nodeId && this.#nodeId != id &&\n            ika.print(NodeEvent.NodeAlreadyHasId, this.#nodeId, this)\n\n        this.#nodeId ??= id\n    }\n    getNodeId() { return this.#nodeId }\n\n    registerBindsWithParentComponent() {\n        const bindKey = this.getAttribute('b')\n        if (!bindKey || bindKey == '') {\n            ika.print(BindEvent.BindingElementHasNoBindKey, this)\n            return\n        }\n        registerBind({\n            requester: this,\n            bind: bindKey,\n            global: this.hasAttribute('global')\n        })\n    }\n    deregisterBindsWithParentComponent() {\n        deregisterBind({\n            requester: this,\n            bind: this.getAttribute('b'),\n            global: this.hasAttribute('global')\n        })\n    }\n\n    onParentComponentLoaded() { }\n\n    bindValueChanged(update: BindingEvent.ValueUpdate) {\n        ika.print(BindEvent.NoBindingValueUpdateHandler, this.tagName.toLowerCase())\n    }\n}\n\ntype RegisterBindProps = {\n    requester: BindingComponent,\n    bind: string,\n    global?: boolean,\n}\n\nexport async function registerBind(prop: RegisterBindProps) {\n    ika.print(BindEvent.RegisteringBinding, prop.bind, prop.requester.tagName.toLowerCase())\n\n    if (!prop.global) {\n        let parentComponent = await getParentIkaComponent(prop.requester)\n        // no parent will result in unresolving get parent promise since callback will never be called to resolve. \n\n        const parentComponentName = parentComponent ? parentComponent.tagName.toLowerCase() : null\n        parentComponent\n            ? customElements.whenDefined(parentComponentName).then(() => sendMsgAndInit(prop.requester, parentComponent, prop.bind))\n            : ika.print(BindEvent.NoParentFound, prop.requester)\n    } else {\n        ika.reg.subscribeToBind(prop.bind, prop.requester.getNodeId(), prop.requester.bindValueChanged.bind(prop.requester))\n    }\n}\n\n\nfunction sendMsgAndInit(requester: BindingComponent, parentComponent: IkaComponent, bind: string) {\n    try {\n        ika.print(BindEvent.InitiatingBinding, requester.tagName.toLowerCase(), parentComponent.tagName.toLowerCase())\n        requester.dispatchEvent(getRegistrationEvent(true, requester, bind))\n\n        requester.onParentComponentLoaded()\n        const initState = parentComponent.getState(bind)\n        initState && requester.bindValueChanged({ k: bind, v: initState })\n    } catch (e) {\n        console.error(`Ika error - Could not send registration`)\n        console.log({ requester: requester, parentComponent: parentComponent })\n        throw e\n    }\n}\n\nexport async function deregisterBind(prop: RegisterBindProps) {\n    ika.print(BindEvent.DeregisteringBinding, prop.bind, prop.requester.tagName.toLowerCase())\n\n    if (!prop.global) {\n        const parentComponent = await getParentIkaComponent(prop.requester) as IkaComponent\n        parentComponent\n            ? prop.requester.dispatchEvent(getRegistrationEvent(false, prop.requester, prop.bind))\n            : console.warn(`Registration failed for <${prop.requester.tagName.toLowerCase()}>: no parent component found.`)\n    }\n}\n\nfunction getRegistrationEvent(register: boolean, requester: BindingComponent, bind: string) {\n    const leap = Number.parseInt(requester.getAttribute('leap'))\n    const detail: ComponentCall.EventDetail.RegisterBind | ComponentCall.EventDetail.DeregisterBind = {\n        type: register ? ComponentCall.EventType.RegisterBind : ComponentCall.EventType.DeregisterBind,\n        nodeId: requester.getNodeId(),\n        payload: {\n            bind: bind,\n            issuer: requester,\n            leap: Number.isNaN(leap) ? null : leap\n        }\n    }\n    return new CustomEvent(CustomEventTypes.ComponentCall, {\n        bubbles: true,\n        composed: true,\n        cancelable: true,\n        detail: detail\n    })\n}\n\nexport async function getParentIkaComponent(c: Element, ignoreLeap?: boolean): Promise<IkaComponent> {\n    if (!(c instanceof Element)) {\n        console.error(`An object that is not a DOM element has been passed into getParentIkaComponent().`);\n        console.log({ element: c, ignoreLeap: ignoreLeap })\n        return\n    }\n\n\n    let leaps = ignoreLeap ? 0 : Number.parseInt(c.getAttribute('leap'))\n    leaps = Number.isNaN(leaps) ? 0 : leaps\n\n    let parentCustomElement = c\n\n    for (let i = 0; i <= leaps; i++) {\n        do {\n\n            parentCustomElement = getParentCustomElement(parentCustomElement)\n            if (!(parentCustomElement instanceof HTMLElement)) {\n                console.log({ start: c, leaps: leaps, i: i, parent: parentCustomElement })\n                console.error(`Could not find parent Ika component.`)\n                return\n            }\n\n            await customElements.whenDefined(parentCustomElement.tagName.toLowerCase())\n\n        } while (!(!parentCustomElement || elementIsIkaComponent(parentCustomElement)))\n    }\n\n    return parentCustomElement as IkaComponent\n\n\n    function getParentCustomElement(target: Element) {\n        let parent = target, isCustomComponent = false, hasParent = true;\n\n        do {\n            // @ts-ignore\n            parent = parent.parentElement || parent.parentNode.host\n            if (!parent) {\n                hasParent = false\n            } else {\n                isCustomComponent = parent.tagName.includes('-')\n            }\n        } while (!isCustomComponent && hasParent)\n\n        return parent\n    }\n}","import { ika, IkaComponent } from \"../ika\";\nimport { IkaDebugStyles } from \"../debug\";\nimport { BindingEvent, ComponentCall, CustomEventTypes } from \"../types/events\";\nimport BindingComponent from \"../core/bind\";\n\nexport default class IkaStateDependentContainer extends BindingComponent {\n    #chain: Array<string> = []\n    #dependents: Array<IkaStateDependentContainer> = []\n    constructor() {\n        super()\n        //@ts-ignore\n        this.addEventListener(CustomEventTypes.ComponentCall, this.addDependentSDC)\n    }\n\n    bindValueChanged(update: BindingEvent.ValueUpdate) {\n        const isChildSdcOfAffectedSdc = this.#chain.some(b => b == update.k)\n        const hasDependentSdcs = this.#dependents.length > 0\n\n        if (!isChildSdcOfAffectedSdc && hasDependentSdcs) {\n            ika.debug(`The <ika-sdc> has affected child`)\n            // Dependent SDCs in this SDC's child nodes and their node trees are removed from the component's binding callbacks.\n            this.#dependents.forEach(c => c.deregisterBindsWithParentComponent())\n            this.#dependents = []\n        }\n\n        this.#attachSDT()\n    }\n\n    addDependentSDC(e: CustomEvent<ComponentCall.EventDetails>) {\n        if (e.detail.type == ComponentCall.EventType.EstablishChain && !(e.composedPath()[0] as Node).isSameNode(this)) {\n            const dependentElement = e.detail.payload.issuer\n            ika.debug(`<ika-sdc> received an EstablishChain event, adding a <${dependentElement.tagName.toLowerCase()}> to depedents`)\n            this.#dependents.push(dependentElement)\n        }\n    }\n\n    establishChainCb(path: EventTarget[], component: IkaComponent) {\n        this.setComponent(component)\n        path.forEach((n, i) => {\n            if (n instanceof IkaStateDependentContainer && i != 0) {\n                this.#chain.unshift(n.getAttribute('b'))\n            }\n        })\n\n        this.#chain.length > 0 && ika.debug(`<ika-sdc> registered a SDC dependency chain of [${this.#chain.join(', ')}]`)\n    }\n\n    onParentComponentLoaded() {\n        const detail: ComponentCall.EventDetail.EstablishChain = {\n            type: ComponentCall.EventType.EstablishChain,\n            nodeId: this.getNodeId(),\n            payload: { issuer: this }\n        }\n        const establishChainEvent = new CustomEvent(CustomEventTypes.ComponentCall, {\n            bubbles: true,\n            composed: true,\n            cancelable: true,\n            detail: detail\n        })\n\n        ika.debug(`%c<${this.tagName.toLowerCase()}>%c component triggering establish chain event.`, [IkaDebugStyles.ComponentName, 'color: unset'])\n        this.dispatchEvent(establishChainEvent)\n    }\n\n    #attachSDT() {\n        const componentName = this.getComponent().tagName.toLowerCase()\n        const bind = this.getAttribute('b')\n        const ikaTemplatesChildren = document.getElementsByTagName('ika:templates')[0].children\n\n        const sdt = getElement('sdt', ikaTemplatesChildren, sdt => sdt.getAttribute('cn') && sdt.getAttribute('cn').toLowerCase() == componentName);\n        const stc = getElement('stc', sdt.children, stc => stc.getAttribute('b') == bind)\n        const tamc = getElement('tamc', stc.children, tamc => tamc.getAttribute('ts') == this.getAttribute('ts'))\n        const template = getElement('template', tamc.children,\n            template => template instanceof HTMLElement && template.dataset.a == this.getComponent().getState(bind))\n\n        if (!template) {\n            // No template matches the state value, display nothing for the SDC.\n            this.replaceChildren()\n        } else {\n            // Adding SDC children will trigger their constructors firing off EstablishChain events, which will be listend to by this component.\n            // No need to register them here.\n            if (!(template instanceof HTMLTemplateElement)) {\n                console.error(`Retrieved template arm match element isn't a template.`); return;\n            }\n            const clonedNode = template.content.cloneNode(true)\n            this.replaceChildren(...clonedNode.childNodes)\n        }\n\n        function getElement(type: 'template' | 'sdt' | 'stc' | 'tamc', collection: HTMLCollection, filter: (e: Element) => boolean) {\n            const result = Array.from(collection).filter(filter)\n            checkIfMoreThanOne(type, result);\n            return result[0]\n        }\n\n        function checkIfMoreThanOne(type, arr) {\n            const tag = type == 'template' ? '<template>' : `<ika:${type}>`\n            if (tag == '<template>') {\n                arr.length == 0 && ika.debug(`No ${tag} is a match for the current state.`)\n            } else {\n                if (arr.length > 1) {\n                    console.error(`More than one ${tag} is defined for component \"${componentName}\"`)\n                } else if (arr.length == 0) {\n                    console.error(`No ${tag} is defined for component \"${componentName}\"`)\n                }\n            }\n        }\n    }\n}","import IkaMapElements from \".\"\nimport { DocumentCreateElement } from \"../../common/shortcuts\"\nimport { applyBindingDictionary } from \"./applyBindingDictionary\"\nimport { BindingDictionaries, BindingDictionary } from \"./types\"\n\nexport enum InsertionOption {\n    Before,\n    Child\n}\n\nexport function mapChildren(this: IkaMapElements, cn: string,\n    bd: BindingDictionaries,\n    bdKey: string,\n    mapArray: Array<any>,\n    subKey: Array<Element> | null,\n    insertionMethod: InsertionOption,\n    insertionTarget: Node): Array<Node> {\n\n    const fragment = new DocumentFragment()\n    mapArray.forEach((data, i) => {\n        const newElement = DocumentCreateElement(cn)\n        applyBindingDictionary(newElement, bd[bdKey], data, i)\n        fragment.appendChild(newElement)\n    })\n\n\n    // Recursively insert nodes into mapped nodes if <ika:subkey> is used\n    if (Array.isArray(subKey)) {\n        subKey.forEach((subKeyElement) => {\n            const [mfKey, cnKey, subBdKey] = ['mf', 'cn', 'bd'].map(key => subKeyElement.getAttribute(key))\n            fragment.childNodes.forEach((node, i) =>\n                mapChildren.bind(this)(cnKey, bd, subBdKey, mapArray[i][mfKey], getSubKeyArray(subKeyElement), InsertionOption.Child, node)\n            )\n        })\n    }\n\n    const insertedNodes = Array.from(fragment.childNodes)\n    const target = insertionTarget ?? this\n    insertionMethod == InsertionOption.Before\n        ? target.parentNode.insertBefore(fragment, target)\n        : target.appendChild(fragment)\n\n    return insertedNodes\n}\n\nexport function getSubKeyArray(target: Element): Array<Element> | null {\n    return Array.from(target.children).filter(e => e.tagName.toLowerCase() == 'ika:subkey')\n}","export function DocumentCreateElement<T extends HTMLElement>(tagName: string) { return document.createElement(tagName) as T }\nexport function ObjectEntriesForEach(object, forEach: (e: [string, any]) => void) { Object.entries(object).forEach(e => forEach(e)) }","import IkaMapElements from \".\"\nimport { deregisterBind, registerBind } from \"../../core/bind\"\n\nexport function setBind(this: IkaMapElements, is: string, deregister?: boolean) {\n    const param = { requester: this as any, bind: `ika-me:${is}`, global: this.hasAttribute('global') }\n    deregister\n        ? deregisterBind(param)\n        : registerBind(param)\n}","import { DocumentCreateElement } from '../../common/shortcuts';\nimport IkaMapElements, { PostMappingOption } from './index';\nimport { setBind } from './setBind';\n\nconst ASIDE_CONTAINER_TAG_NAME = 'ika:aside';\n\nexport function postMappingOperations(this: IkaMapElements, mode: PostMappingOption) {\n    if (![PostMappingOption.Aside, PostMappingOption.Remove].includes(mode)) return;\n\n    switch (mode) {\n        case PostMappingOption.Aside:\n            if (this.parentElement?.tagName?.toLowerCase() == ASIDE_CONTAINER_TAG_NAME) return;\n\n            let asideContainer = document.getElementsByTagName(ASIDE_CONTAINER_TAG_NAME)[0];\n            if (!asideContainer) {\n                asideContainer = DocumentCreateElement(ASIDE_CONTAINER_TAG_NAME)\n                document.body.firstChild.before(asideContainer);\n            }\n\n            asideContainer.appendChild(this);\n            break;\n        case PostMappingOption.Remove:\n            // Deregister bind and remove element from DOM\n            setBind.bind(this)(this.getAttribute('ika:is'), true);\n            this.parentNode.removeChild(this);\n            break;\n        default: break;\n    }\n}","import { ObjectEntriesForEach } from '../../common/shortcuts';\nimport { ika, IkaComponent } from '../../ika';\nimport { MapElementEvent } from '../../types/debug';\nimport { BindingDictionary } from './types';\n\nexport function applyBindingDictionary(target: Element, bd: BindingDictionary, data: any, index: number) {\n    if (bd) {\n        validateOutputAndApply('attr', target, bd, data, index);\n        validateOutputAndApply('prop', target, bd, data, index);\n        if (bd.states) {\n            const tagName = target.tagName.toLowerCase();\n\n            if (target.tagName.includes('-')) {\n                customElements.whenDefined(tagName).then(() => {\n                    if (target instanceof IkaComponent) {\n                        ObjectEntriesForEach(bd.states, ([key, transformationFn]) => {\n                            target.setState(key, transformationFn(data, index));\n                        });\n                    } else { printException() }\n                });\n            } else { printException() }\n\n        }\n    }\n    function printException() {\n        ika.print(MapElementEvent.StateMappingNotOnIkaComponent, bd, target.tagName.toLowerCase())\n    }\n}\n\ntype ValidationMode = Exclude<keyof BindingDictionary, 'states'>;\nfunction validateOutputAndApply(type: ValidationMode, target: Element, bd: BindingDictionary, data: any, index: number) {\n    const applyFn = type == 'attr'\n        ? ([attr, val]) => target.setAttribute(attr, val)\n        : ([prop, val]) => target[prop] = val;\n\n    if (type in bd) {\n        const output = bd[type](data, index);\n\n        if (output == null) { return; }\n        if (typeof output != 'object') {\n            ika.print(MapElementEvent.UnexpectedBDOutputType, output); return;\n        }\n\n        ObjectEntriesForEach(output, ([k, v]) => {\n            if (!['string', 'number'].includes(typeof v)) {\n                ika.print(MapElementEvent.UnexpectedBDOutputValue, k, v); return;\n            }\n            applyFn([k, v]);\n        });\n    }\n}\n","import { ika } from '../../ika'\nimport { BindingEvent } from '../../types/events';\nimport { MapElementEvent } from '../../types/debug';\nimport { IkaMeBindingValue } from './types';\nimport { postMappingOperations } from './postMappingOperations';\nimport { validateBd } from './validateBd';\nimport { mapChildren, getSubKeyArray, InsertionOption } from './mapChildren';\nimport { setBind } from './setBind';\n\nexport enum PostMappingOption {\n    Aside = 'aside',\n    Remove = 'remove'\n}\n\nconst observedAttributes = ['mf', 'ika:is', 'cn']\nexport default class IkaMapElements extends HTMLElement {\n    #nodeId: string = null\n    #hasRegisteredBind: boolean = false;\n    #mappedNodesInDOM: Array<Node> = []\n    #insertionRoot: { marker: Node, method: InsertionOption };\n\n    constructor() {\n        super();\n        this.#insertionRoot = {\n            marker: this as Node,\n            method: [PostMappingOption.Aside, PostMappingOption.Remove].includes(this.getAttribute('post') as PostMappingOption)\n                ? InsertionOption.Before\n                : InsertionOption.Child\n        }\n    }\n\n    // Custom element lifecycle method to observe changed attributes\n    static get observedAttributes() { return observedAttributes }\n    attributeChangedCallback(attrName: string, oldVal: string, newVal: string) {\n        const [mf, is, cn] = observedAttributes.map(key => this.getAttribute(key))\n        if (!mf || !cn || !is) return;\n\n        if (!this.#nodeId) {\n            // Node ID is not set by a parent component - binding to be made after ID is obtained.\n            ika.reg.registerNode(this as any, this, (id: string, n, r) => {\n                r.setNodeId(id)\n                setBind.bind(this)(is)\n                this.#hasRegisteredBind = true\n            })\n        } else if (attrName == 'ika:is' && oldVal != newVal) {\n            // \"ika:is\" attribute changed. Register new binding and deregister old binding.\n            setBind.bind(this)(oldVal, true)\n            setBind.bind(this)(newVal)\n        } else {\n            // Node ID could have been set by a parent component (e.g. <ika-ab>), but the binding has not been registered yet.\n            if (!this.#hasRegisteredBind) {\n                setBind.bind(this)(is)\n                this.#hasRegisteredBind = true\n            } else {\n                this.bindValueChanged({\n                    k: `ika-me:${is}`,\n                    v: ika.reg.getBindValue(`ika-me:${is}`, this.#nodeId)\n                })\n            }\n        }\n    }\n\n    bindValueChanged(update: BindingEvent.ValueUpdate<IkaMeBindingValue>) {\n        const marker = this.#insertionRoot.marker\n        if (!marker.isConnected) { throw 'Insertion marker no longer connected' }\n\n        const mf = this.getAttribute('mf')\n        const bdKey = this.getAttribute('bd') ?? '_default'\n        const bd = update.v?.bd\n\n        if (!update.v || (bd?.[bdKey] && !validateBd(bd[bdKey]))) { return }\n\n        const hasMFValue = update.v?.mf && mf in update.v.mf && update.v.mf[mf] != null\n        !hasMFValue && ika.print(MapElementEvent.NoMapFrom, mf)\n\n        const mapArray = getMapArray(update.v.mf?.[mf])\n        function getMapArray(mf: Array<any> | Set<any>) {\n            if (!mf) return null\n            return mf instanceof Set ? [...mf.values()] : mf\n        }\n\n        if (!Array.isArray(mapArray)) { ika.print(MapElementEvent.UnexpectedMFType, mapArray); return; }\n        if (mapArray == null) { return }\n\n        const mappedNodes = mapChildren.bind(this)(\n            this.getAttribute('cn'),\n            bd, bdKey, mapArray, getSubKeyArray(this),\n            this.#insertionRoot.method, marker\n        )\n\n        const postMappingMode = this.getAttribute('post') as PostMappingOption\n        if (mappedNodes.length == 0 && postMappingMode == PostMappingOption.Aside) {\n            marker.parentNode.insertBefore(this, marker)\n        } else {\n            postMappingOperations.bind(this)(postMappingMode)\n        }\n\n        // Delete previously mapped nodes and update the list for record keeping\n        this.#mappedNodesInDOM.forEach(n => n.parentNode?.removeChild(n))\n        this.#mappedNodesInDOM = mappedNodes\n\n        // Update insertion marker after new mapping\n        if (postMappingMode == PostMappingOption.Aside) {\n            this.#insertionRoot.marker = this.#mappedNodesInDOM[0] ?? this\n        }\n    }\n\n    onParentComponentLoaded() { }\n\n    setNodeId(id: string) { this.#nodeId = id }\n    getNodeId() { return this.#nodeId }\n}","import { ika } from \"../../ika\";\nimport { MapElementEvent } from \"../../types/debug\";\nimport { BindingDictionary } from \"./types\";\n\nexport function validateBd(bdEntry: BindingDictionary) {\n    if (bdEntry.states && typeof bdEntry.states != 'object') {\n        ika.print(MapElementEvent.UnexpectedBDStateObject);\n        return;\n    }\n\n    const unexpectedBdValue = [bdEntry.attr, bdEntry.prop, ...Object.values(bdEntry.states ?? {})].find(v => typeof v != 'function')\n    if (unexpectedBdValue) {\n        ika.print(MapElementEvent.UnexpectedBDType, unexpectedBdValue);\n        return;\n    }\n\n    return true;\n}","import { IkaDebugStyles } from \"../debug\";\nimport { ika } from \"../ika\";\nimport { BindCallback, BindCallbackArray, BindCallbackRecord } from \"../types/binds\";\nimport { BindingEvent } from \"../types/events\";\nimport { BindEvent } from \"../types/debug\";\nimport { BindRecord, BindRecords, GlobalBindPermissions } from \"./reg\";\n\nexport default class StateBindRegister {\n    #binds: BindRecords = {}\n    #host = null\n\n    constructor(element: HTMLElement) { this.#host = element }\n\n    listStates() {\n        if (IKA_CONFIG.debugMode) {\n            return this.#binds\n        }\n    }\n\n    subscribeToBind(k: string, nodeId: string, cb: BindCallback) {\n        if (!nodeId || !k || !cb) {\n            ika.print(BindEvent.UnregisteredNodeSubscribing, k)\n            return;\n        }\n\n        const newCbRecord: BindCallbackRecord = { nodeId: nodeId, cb: cb }\n        if (!(k in this.#binds)) {\n            // Subscribing to a global bind is allowed before it's been set a value. This defaults to a permissionless bind var.\n            this.#binds[k] = { v: null, cb: [newCbRecord] }\n        } else {\n            const bindRecord = this.#binds[k]\n            if (rejectIfNotPermissioned(bindRecord)) { return }\n\n            bindRecord.cb.push(newCbRecord)\n            cb({ k: k, v: bindRecord.v })\n        }\n\n        ika.print(BindEvent.Subscribed, nodeId, k)\n\n        function rejectIfNotPermissioned(bindRecord: BindRecord) {\n            if (bindRecord.p && !bindRecord.p.rw.includes(nodeId) && bindRecord.p.r && !bindRecord.p.r.includes(nodeId)) {\n                ika.print(BindEvent.BindingPermissionDenied, nodeId, k)\n                return true;\n            }\n        }\n    }\n\n    unsubscribeToBind(nodeId: string, k?: string) {\n        if (k && !(k in this.#binds)) {\n            console.warn(`\"%c${k}%c\" is not a registered bind key.`, IkaDebugStyles.VariableValue, 'color: unset'); return;\n        }\n\n        const scope = k ? [k] : Object.keys(this.#binds)\n\n        scope.forEach(bind => {\n            this.#binds[bind].cb = this.#binds[bind].cb.filter(entry => entry.nodeId != nodeId)\n        })\n    }\n\n    clearDeregisteredNode(nodeId: string) {\n        performance.mark('registry-deregister-node-from-binds-start', {\n            detail: { nodeId: nodeId }\n        })\n\n        const bindEntries = Object.entries(this.#binds)\n        bindEntries.forEach(([k, bind]) =>\n            bind.cb = bind.cb.filter(record => record.nodeId != nodeId)\n        )\n\n        performance.measure('registry-deregister-node-from-binds-end', {\n            start: 'registry-deregister-node-from-binds-start',\n            detail: { nodeId: nodeId, bindsCount: bindEntries.length }\n        })\n    }\n    getValue(k: string, nodeId?: string) {\n        if (!k) { console.error(`getValue() must specify a bind key.`); return; }\n\n        if (!this.#binds[k]) {\n            console.warn(`Tried reading state \"${k}\", but it's not defined.`)\n            return null\n        }\n\n        const p = this.#binds[k].p\n        const nodeIdHasReadPermission = p && nodeId && (p.rw.includes(nodeId) || (p.r && p.r.includes(nodeId)))\n        if (!p || nodeIdHasReadPermission) {\n            // DESIGN DECISION?\n            // This allows the change of reference types without triggering a bind update.\n            // Prevent unauthorised changes to the array by using the permissioning system.\n            // Otherwise, always create a new reference value to set as new value to trigger a bind update.\n            return this.#binds[k].v\n        } else {\n            console.warn(`Node ID ${nodeId} tried reading state ${k}, but it has no permission to read.`)\n        }\n\n    }\n\n    deleteNodeFromBindRecords(node: HTMLElement, id: string) {\n        this.clearDeregisteredNode(id)\n        ika.reg.deregisterNode(node, id)\n    }\n\n    setValue(k: string, v: any, nodeId?: string, p?: GlobalBindPermissions) {\n        if (k in this.#binds) {\n            const bindRecord = this.#binds[k]\n            if (bindRecord.v === v) return;\n\n            const hasPermission = checkIfPermissionedForRW(bindRecord)\n            if (!hasPermission) return;\n\n            Object.assign(bindRecord, { v: v })\n            p && setPermissions(nodeId, p, bindRecord)\n\n            ika.print(BindEvent.BindingValueChanged, k, this.#host, v, this.#binds[k].cb.length)\n            cleanInvokeCbs.bind(this)(bindRecord.cb, { k: k, v: v })\n\n        } else {\n            this.#binds[k] = {\n                v: v,\n                cb: []\n            }\n            p && setPermissions(nodeId, p, this.#binds[k])\n        }\n\n        function cleanInvokeCbs(ar: BindCallbackArray, u: BindingEvent.ValueUpdate) {\n            ar.forEach(entry => {\n                const node = ika.reg.getNodeFromId(entry.nodeId) as HTMLElement\n                node?.isConnected\n                    ? entry.cb(u)\n                    : this.deleteNodeFromBindRecords(node, entry.nodeId)\n            })\n        }\n\n        function copyPermissionObject(p: GlobalBindPermissions) {\n            // Permission is copied from arrays so that they cannot be changed outside IkaRegistry class methods.\n            const out: GlobalBindPermissions = { rw: [] }\n            if (Array.isArray(p.rw)) { out.rw = [...p.rw] }\n            if (Array.isArray(p.r)) { out.r = [...p.r] }\n\n            return out\n        }\n\n        function checkIfPermissionedForRW(bindRecord: BindRecords[number]) {\n            if (bindRecord.p && !nodeId) {\n                console.error(`Error setting bind value \"${k}\": a node ID must be provided as the binding key is permissioned.`);\n                return false;\n            }\n\n            if (bindRecord.p && !bindRecord.p.rw.includes(nodeId)) {\n                console.warn(`\"%c${k}%c\" is already registered as a permissioned bind, and this node ID is not permissioned for Read/Write.\n                If you meant to register a bind for the first time, nodes with Read/Write permission must unregister it first.`,\n                    IkaDebugStyles.VariableValue, 'color: unset');\n                return false;\n            }\n            return true;\n        }\n\n        function setPermissions(nodeId: string, p: GlobalBindPermissions, bindRecord: BindRecords[number]) {\n            if (!nodeId) {\n                console.warn(`Permissions on bind key \"%c${k}%c\" is not set, as no node ID was provided.`, IkaDebugStyles.VariableValue, 'color: unset')\n            } else {\n                if (bindRecord.p && !bindRecord.p.rw.includes(nodeId)) {\n                    console.warn(`Setting permissions on bind key \"%c${k}%c\" is denied. The provided node ID does not have RW permission.`, IkaDebugStyles.VariableValue, 'color: unset')\n                    return;\n                }\n                // Automatically giving the node setting permissions RW privilege.\n                const permissions: GlobalBindPermissions = copyPermissionObject(p)\n                permissions.rw.push(nodeId)\n                Object.assign(bindRecord, { p: permissions })\n            }\n        }\n    }\n}","import { QueueLock } from \"../common\"\nimport IkaMapElements from \"../components/me\"\nimport IkaRoute from \"../components/route\"\nimport { ika, IkaComponent } from \"../ika\"\nimport { BindCallback, BindCallbackArray } from \"../types/binds\"\nimport { NodeEvent, RouterEvent } from \"../types/debug\"\nimport BindingComponent from \"./bind\"\nimport StateBindRegister from \"./sbr\"\n\ntype ImportRegistry = {\n    [p: string]: {\n        t: Node[], // Template or script (in head) nodes\n        n: Node[]  // Other nodes\n    }\n}\n\nexport type BindRecords = {\n    [bind: string]: BindRecord\n}\nexport type BindRecord = {\n    v: any,\n    cb: BindCallbackArray\n    p?: GlobalBindPermissions\n}\n\nexport type GlobalBindPermissions = {\n    rw: Array<string>,\n    r?: Array<string>\n}\n\nexport default class IkaRegistry {\n    #imports: ImportRegistry = {}\n    #importedComponents: { [templateId: string]: string } = {}\n    #nodeIds: { [id: string]: Node } = {}\n    #binds = new StateBindRegister(this as any);\n    #queue = new QueueLock()\n    #awaitingIds: Array<Element> = []\n    #routes: { [key: string]: { n: IkaRoute, p: string } } = {}\n    #templateRequests: { [key: string]: Array<(() => void)> } = {}\n    #anchorListenerAborter: AbortController\n\n    constructor() { }\n\n    debugPrint() {\n        if (IKA_CONFIG.debugMode) {\n            console.log(this.#binds.listStates());\n        }\n    }\n\n    getPathMD5(path: string) {\n        return this.#importedComponents[path]\n    }\n\n    async registerComponentImport(component: string, templateText: string) {\n        this.#importedComponents[component] = await getSHA1Hash(templateText)\n    }\n\n    // deregisterComponentImport(component: string, template: string) {\n    //     delete this.#importedComponents[component]\n    // }\n\n    hasImport(href: string) {\n        return href in this.#imports\n    }\n    registerImport(href: string) {\n        this.#imports[href] = { t: [], n: [] }\n    }\n    addTemplateNode(node: Node, templateId: string, href: string) {\n        this.#imports[href].t.push(node)\n        this.#templateRequests[templateId]?.forEach(r => r())\n    }\n    addBodyNodes(href: string, nodes: Array<Node> | NodeList) {\n        this.#imports[href].n.push(...Array.from(nodes).filter(n => n.nodeType != Node.TEXT_NODE))\n    }\n    addScriptNodes(href: string, nodes: Array<Node> | NodeList) {\n        this.#imports[href].t.push(...Array.from(nodes).filter(n => n.nodeType != Node.TEXT_NODE))\n    }\n    getImportRegisterByPath(p: string) {\n        return this.#imports[p]\n    }\n\n    async getComponentTemplate(id: string) {\n        // change this part when the registered imports are under component names\n        let template = getTemplate(id)\n        if (template) { return template }\n\n        this.#templateRequests[id] ??= []\n        let resolver;\n        const templateInserted = new Promise(r => resolver = r)\n        this.#templateRequests[id].push(resolver)\n        await templateInserted\n\n        return getTemplate(id)\n\n        function getTemplate(id: string) {\n            let template = document.querySelector(`#${id}`)\n            if (template) {\n                if (template instanceof HTMLTemplateElement) {\n                    return template\n                } else {\n                    throw new Error(`Template with ID \"${id}\" is not a template element.`)\n                }\n            }\n        }\n    }\n\n\n    // Pass StateBindRegisters class methods available through this.#binds as IkaRegistry class methods\n    subscribeToBind(k: string, nodeId: string, cb: BindCallback) { this.#binds.subscribeToBind(k, nodeId, cb) }\n    unsubscribeToBind(nodeId: string, k: string) { this.#binds.unsubscribeToBind(nodeId, k) }\n    setBindValue(k: string, v: any, nodeId?: string, p?: GlobalBindPermissions) {\n        this.#binds.setValue(k, v, nodeId, p)\n    }\n    getBindValue(k: string, nodeId?: string) {\n        const v = this.#binds.getValue(k, nodeId)\n        return v\n    }\n\n    registerNode(requester: BindingComponent, n: Element, cb: (id: string, n: Element, r: BindingComponent) => void) {\n        this.#queue.queue().then(() => {\n            // This checks if a node has already been registered. Not entirely necessary to normal functioning?\n            if (!requester || !n) { console.error(`Could not register node - requester and element must be supplied.`) }\n\n            if (!shouldRegisterNode.bind(this)(n)) {\n                this.#queue.next()\n                return;\n            }\n\n            this.getNewIdThenInvokeCallback(n, cb, requester)\n            this.#awaitingIds.push(n)\n            this.#queue.next()\n        })\n\n        function shouldRegisterNode(this: IkaRegistry, n: Element) {\n            const hasId = n instanceof HTMLElement && (n instanceof IkaComponent || n instanceof IkaMapElements) && n.getNodeId()\n            if (hasId) return\n\n            const existingRegistration = Object.entries(this.#nodeIds).find(([id, node]) => node.isSameNode(n))\n            if (existingRegistration) {\n                ika.print(NodeEvent.AlreadyRegistered, existingRegistration[0], n)\n                cb(existingRegistration[0], n, requester)\n                return;\n            }\n\n            const isAwaitingId = this.#awaitingIds.find(node => node.isSameNode(n))\n            if (isAwaitingId) return\n\n            return true\n        }\n    }\n\n    getNodeFromId(id: string) {\n        if (!(id in this.#nodeIds)) {\n            console.warn(`A query is made for node id %c${id} %c, and the ID was not registered.`, 'color: #999', 'color: unset')\n        }\n        return this.#nodeIds[id]\n    }\n\n    deregisterNode(n: Element, id: string) {\n        if (!(this.#nodeIds[id])) {\n            console.warn(`Trying to deregister node ID %c${id}%c, but the ID was not registered.`, 'color: #999', 'color: unset')\n        } else if (!this.#nodeIds[id].isSameNode(n)) {\n            console.warn(`Trying to deregister node ID %c${id}%c, but the supplied node was not the same as records.`, 'color: #999', 'color: unset')\n        } else {\n            delete this.#nodeIds[id]\n            this.#binds.clearDeregisteredNode(id)\n            ika.print(NodeEvent.Deregistered, n.tagName.toLowerCase(), id)\n        }\n    }\n\n    getRegistry() {\n        if (IKA_CONFIG.debugMode) {\n            return this.#nodeIds\n        }\n    }\n\n    async getNewIdThenInvokeCallback(n: Element, cb: (id: string, n: Element, r: BindingComponent) => void, r) {\n        let newId;\n        do {\n            newId = await generateIdString()\n        } while (newId in this.#nodeIds)\n\n        this.#nodeIds[newId] = n\n        this.#awaitingIds.splice(this.#awaitingIds.findIndex(node => node.isSameNode(n)), 1)\n        // Object.freeze(this.#nodeIds[newId])\n\n        ika.print(NodeEvent.Registered, n, newId)\n        cb(newId, n, r)\n    }\n\n    registerRouter(key: string, ref: IkaRoute) {\n        const init = Object.keys(this.#routes).length == 0\n\n        if (key in this.#routes) {\n            ika.print(RouterEvent.OverwritingKey, key, ref)\n        }\n        this.#routes[key] = { n: ref, p: null }\n\n        if (init) {\n            if (!window.IKA_ROUTE_CONFIG.unprotected) { Object.freeze(window.IKA_ROUTE_CONFIG) }\n            routeCurrentLocation()\n            window.addEventListener('popstate', routeCurrentLocation)\n        }\n    }\n    unregisterRouter(key: string) {\n        delete this.#routes[key]\n        Object.keys(this.#routes).length == 0 && this.unsetAnchorListener();\n    }\n\n    async setRoute(key: string, url: string, state?, options?: SetRouteOptions) {\n        // When using setRoute() of the Registry, it is the URL users sees in browser\n        // The URL passed to this method is parsed against the rules in IKA_ROUTE_CONFIG\n        // State can also be set in the history object, because pushState() or replaceState is called here.\n        // The setRoute() method of a <ika-route> component simply puts the URL into a <ika-import> element\n        // It does not interact with the history object / page state.\n\n        if (!(key in this.#routes)) {\n            console.warn(`Trying to set route \"${key}\" but it was not registered.`)\n            return\n        }\n        const target = this.#routes[key]\n\n        // Garbage collection for old routes cleared when requesting\n        if (!target.n.isConnected) { delete this.#routes[key]; return }\n        const u = new URL(url, window.location.href)\n        const [res, ruleState] = await getResourcePathAndState(u.pathname, u.searchParams, u.hash)\n\n        if (!(target.p == res && !options?.force)) {\n            target.n.setRoute(res)\n            target.p = res\n        }\n\n        history[options?.replaceState ? 'replaceState' : 'pushState'](\n            state ?? ruleState,\n            null,\n            options?.setPath ?? url)\n\n        window.dispatchEvent(new CustomEvent('ika:popstate', { detail: { state: state ?? ruleState } }))\n    }\n    getRoute(key: string) { return this.#routes[key].p }\n\n    setAnchorListener() {\n        if (this.#anchorListenerAborter) return\n\n        this.#anchorListenerAborter = new AbortController()\n        document.addEventListener('click', (e: Event) => {\n            const src = e.composedPath()[0]\n            if (src instanceof HTMLAnchorElement) {\n                const routeTarget = src.dataset['ikaTarget']\n                if (!routeTarget) return\n\n                e.preventDefault()\n                const href = src.getAttribute('href')\n                this.setRoute(routeTarget, href)\n            }\n        }, { signal: this.#anchorListenerAborter.signal })\n    }\n    unsetAnchorListener() { this.#anchorListenerAborter?.abort() }\n}\n\ntype SetRouteOptions = Partial<{\n    force: boolean,\n    replaceState: boolean,\n    noResourceDirPrefix: boolean,\n    setPath: string,\n}>\n\nasync function generateIdString() {\n    const threads = [], parts = 4, length = 6\n    for (let i = 0; i < 4; i++) {\n        threads.push(new Promise((res) => {\n            let str = ''\n            for (let j = 0; j < length; j++) {\n                const base = Math.floor(Math.random() * 26) + 65\n                const bump = 32 * Math.round(Math.random())\n                str += String.fromCharCode(base + bump)\n            }\n            res(str)\n        }))\n    }\n    const res = await Promise.all(threads)\n    return res.join('-')\n}\n\nasync function routeCurrentLocation() {\n    const path = `${window.location.pathname}${window.location.search}${window.location.hash}`\n    ika.reg.setRoute(window.IKA_ROUTE_CONFIG.rootKey, path, null, {\n        replaceState: true\n    })\n}\n\nasync function getResourcePathAndState(path: string, params?: URLSearchParams, anchor?: string) {\n    // To add: rules based on more than params and anchor\n    const config = window.IKA_ROUTE_CONFIG\n    const rules: Array<IkaRouteRule> = config.rules\n\n    const matchedRule = rules.find(r => {\n        if (typeof r.path == 'string') {\n            return r.path == path\n        } else if (r.path instanceof RegExp) {\n            return r.path.test(path)\n        }\n    })\n    const res = matchedRule ? matchedRule.res : `${config.resourceDir ?? ''}${path}`\n    const state = matchedRule ? await getStateFromRule(matchedRule.state, path) : null\n\n    return [res, state]\n}\n\nasync function getStateFromRule(stateFunction: (path: string) => any, path: string) {\n    return typeof stateFunction == 'function'\n        ? await stateFunction(path)\n        : stateFunction\n}\n\ntype IkaRouteRule = {\n    path: string | RegExp,\n    res: string,\n    state?\n}\n\nasync function getSHA1Hash(s: string): Promise<string> {\n    const encoded = await crypto.subtle.digest('SHA-1', new TextEncoder().encode(s))\n    return Array.from(new Uint8Array(encoded)).map((b) => b.toString(16).padStart(2, '0')).join('')\n}","export default class IkaA extends HTMLElement {\n    constructor() {\n        super();\n\n        this.onclick = handleClick.bind(this)\n\n        function handleClick() {\n            const resourcePath = this.getAttribute('href')\n            const target = document.getElementById(this.getAttribute('target'))\n\n            if (target) {\n                // TODO: Test memory management taking removeChild vs setting innerHTML methods\n                // const nodesToRemove = Array.from(target.childNodes)\n                // while (target.firstChild) { target.removeChild(target.lastChild) }\n                target.innerHTML = `<ika-import src=\"${resourcePath}\"></ika-import>`\n                // nodesToRemove.forEach(n => console.log(n))\n            }\n        }\n    }\n}\n","import { ComponentCall, CustomEventTypes } from \"../types/events\";\nimport { IkaComponent } from \"./IkaComponent\";\n\nexport default class IkaBindToFunction extends HTMLElement {\n    constructor() {\n        super();\n        Object.keys(this.dataset).forEach(eventType => {\n            processDataAttribute.bind(this)(`data-${eventType}`)\n        })\n        new MutationObserver(handleAttributeChange.bind(this)).observe(this, {\n            attributes: true,\n            attributeOldValue: true\n        })\n    }\n}\n\nfunction handleAttributeChange(this: IkaComponent, records: Array<MutationRecord>) {\n    records.forEach(record => {\n        if (record.type != 'attributes') return\n        processDataAttribute.bind(this)(record.attributeName)\n    })\n}\n\nfunction processDataAttribute(this: IkaComponent, name: string) {\n    if (!name.startsWith('data-')) return\n    const eventType = name.slice(5)\n    if (!eventType) return\n\n    this.addEventListener(eventType, (e) => {\n        handleEvent.bind(this)(e, this.getAttribute(name))\n    })\n}\n\nfunction handleEvent(this: IkaComponent, e: Event, bind: string) {\n    if (this.hasAttribute('preventDefault')) {\n        e.cancelable\n            ? e.preventDefault()\n            : console.warn(`<ika-bf> was instructed to cancel an uncancelabe event of type \"${e.type}\".`)\n    }\n    sendEventToComponent.bind(this)(e, bind)\n}\n\nfunction sendEventToComponent(this: IkaBindToFunction, e: Event, bind: string) {\n    const eventDetails: ComponentCall.EventDetail.InvokeFunction = {\n        type: ComponentCall.EventType.InvokeFunction,\n        payload: {\n            invocationEvent: e,\n            key: bind\n        }\n    }\n    const leap = Number.parseInt(this.getAttribute('leap'))\n    if (Number.isInteger(leap)) { eventDetails.payload.leap = leap }\n\n    const componentCall = new CustomEvent(CustomEventTypes.ComponentCall, {\n        detail: eventDetails,\n        bubbles: true,\n        cancelable: true,\n        composed: true\n    })\n\n    this.dispatchEvent(componentCall)\n}","import { ika } from '../ika'\n\nexport default class IkaImport extends HTMLElement {\n    #url: URL;\n    \n    constructor() {\n        super();\n        moveSelfToHead(this)\n        const url = new URL(this.getAttribute('src'), window.location.href.match(/.+\\//)[0])\n\n        if (ika.reg.hasImport(url.href)) return;\n        this.#url = url;\n\n        ika.reg.registerImport(url.href)\n        this.#processResponse(fetch(url))\n    }\n\n    async #processResponse(p: Promise<Response>) {\n        const r = await p\n        if (!r.ok) {\n            setError(`Status ${r.status}: Could not load resource from ${r.url}`);\n            return;\n        }\n\n        const contentMIME = r.headers.get('content-type').match(/[^;]+/)[0]\n        switch (contentMIME) {\n            case 'text/html':\n                this.#processHTMLImport(await r.text()); break;\n            default:\n                setError(`Unsupported MIME type \"${contentMIME}\" for \"${r.url}\"`)\n        }\n\n        function setError(msg: string) {\n            console.error(msg)\n        }\n    }\n    async #processHTMLImport(content: string) {\n        const htmlParser = new DOMParser()\n        const doc = htmlParser.parseFromString(content, 'text/html')\n\n        moveIkaTemplates(doc, this.#url.href)\n        reinsertScripts(doc)\n        // If the component further imports other components, insert those <ika-import> elements into the DOM\n        doc.querySelectorAll('ika-import').forEach(e =>\n            !document.querySelector(`ika-import[src=\"${e.getAttribute('src')}\"]`) && document.body.appendChild(e)\n        )\n\n\n        // Execute scripts\n        // const scripts = await Promise.all(Array.from(doc.scripts).map(\n        //     // Either fetch a script resource or take the script element's contents\n        //     async n => n.src\n        //         ? await (await fetch(n.src)).text()\n        //         : n.textContent\n        // ));\n        // scripts.forEach(s => {\n        //     try { Function(`\"use strict\"; ${s}`)() }\n        //     catch (e) { console.log(e) }\n        // })\n    }\n}\n\nfunction moveSelfToHead(e: Element) {\n    let importsContainer = document.getElementsByTagName('ika:imports')[0]\n    if (!importsContainer) {\n        importsContainer = document.createElement('ika:imports')\n        document.head.append(importsContainer)\n    }\n    importsContainer.appendChild(e)\n}\n\nexport function reinsertScripts(doc: Document): Array<HTMLScriptElement> {\n    return Array.from(doc.scripts).map(s => {\n        const newScript = document.createElement('script')\n        newScript.text = s.text\n        Array.from(s.attributes).forEach(attr => newScript.attributes.setNamedItem(attr.cloneNode() as Attr))\n        document.head.appendChild(newScript)\n        s.remove()\n\n        return newScript\n    })\n}\nexport function moveIkaTemplates(doc: Document, sourceUrl: string, noTemplates?: () => void) {\n    const getContainer = (d: Document) => d.getElementsByTagName('ika:templates')[0]\n    const templates = getContainer(doc)?.querySelectorAll('template')\n    if (templates) {\n        let container = getContainer(document)\n        if (!container) {\n            container = document.createElement('ika:templates')\n            document.head.append(container)\n        }\n        // TO DO: Add template name collision detection\n        templates.forEach(t => {\n            container.appendChild(t);\n            ika.reg.addTemplateNode(t, t.id, sourceUrl);\n        })\n    } else {\n        noTemplates?.()\n    }\n}","// <ika-route> is exempt from the Buffer system,\n// as requests for new content shouldn't be so many that it causes performance problems, \n// and fetch requests should start straight away.\n\nimport { IkaStatic } from \"../core/res\";\nimport { ika, ResourceManager } from \"../ika\";\nimport { ImportEvent } from \"../types/debug\";\nimport { moveIkaTemplates, reinsertScripts } from \"./import\";\n\nexport default class IkaRoute extends HTMLElement {\n    constructor() {\n        super();\n        ika.reg.setAnchorListener();\n        ika.reg.registerRouter(this.getAttribute('key'), this)\n\n        const initRoute = this.getAttribute('src')\n        initRoute && this.setRoute(initRoute)\n    }\n\n    async setRoute(path: string) {\n        this.replaceChildren()\n        const r = await fetch(path)\n        if (!r.ok) {\n            this.innerHTML = `<span>🚩Failed to load from ${path}</span>`\n            return;\n        }\n        ika.reg.registerImport(r.url)\n        const parser = new DOMParser()\n        const doc = parser.parseFromString(await r.text(), 'text/html')\n\n        processStatic(doc)\n        const scripts = reinsertScripts(doc)\n        moveIkaTemplates(doc, r.url)\n\n        Array.from(doc.body.getElementsByTagName('ika:templates')).forEach(n => n.remove())\n        doc.body.querySelectorAll('link').forEach(n => doc.head.appendChild(n))\n\n        const [bodyNodes, headNodes] = [[...doc.body.childNodes], [...doc.head.childNodes, ...scripts]]\n\n        // Register imports - when all body nodes are removed from DOM, the script nodes are removed\n        // Currently not linked with re-routes, since routes can be located inside another route.\n        // Note this means you must have body nodes that are not text nodes\n        // Text nodes are not registered because these could be new line characters\n        ika.reg.addBodyNodes(r.url, bodyNodes)\n        ika.reg.addScriptNodes(r.url, headNodes)\n        const registryEntry = ika.reg.getImportRegisterByPath(r.url)\n        const observer = new MutationObserver((m, o) => processMut(r.url, registryEntry, m, o))\n        observer.observe(this, { childList: true })\n\n        ika.print(ImportEvent.ImportedNodes, path, registryEntry)\n\n        this.append(...bodyNodes)\n        this.ownerDocument.head.append(...headNodes)\n\n        // By default, when a new route is applied, <ika-route> will scroll itself into view from the top.\n        if (!this.hasAttribute('no-scroll-on-route')) {\n            // Check if top of the element is visible\n            const topOfElementFromTopOfViewport = this.getBoundingClientRect().top\n            if (topOfElementFromTopOfViewport >= 0 && topOfElementFromTopOfViewport < window.innerHeight) return\n\n            (document.querySelector(this.dataset.scrollToMark) ?? this).scrollIntoView({ behavior: 'smooth', block: 'start' })\n        }\n    }\n}\n\nfunction processStatic(doc: Document) {\n    const staticData = Array.from(doc.querySelectorAll('script[ika-static]'))\n    staticData.forEach((e: HTMLScriptElement) => {\n        try {\n            const d: IkaStatic = JSON.parse(e.textContent)\n            if (!d.headers || !d.data) { throw 'Invalid static data' }\n\n            const resMan = new ResourceManager()\n            resMan.cache(d.url, d.headers, d.data, d.options, true)\n            e.remove()\n        } catch (e) {\n            throw e\n        }\n    })\n}\n\nfunction processMut(url: string, entry: { t: Array<Node>, n: Array<Node> }, mutList: MutationRecord[], observer: MutationObserver) {\n    const removeMuts = mutList.filter(m => m.removedNodes.length > 0)\n    if (removeMuts.length == 0) return\n\n    for (const mut of removeMuts) {\n        mut.removedNodes.forEach(n => {\n            const i = entry.n.findIndex(m => m.isSameNode(n))\n            i != -1 && entry.n.splice(i, 1)\n        })\n    }\n    ika.print(ImportEvent.RemovedNode, url, removeMuts, entry)\n    if (entry.n.length == 0) {\n        entry.t.forEach(templateOrScriptNode => {\n            templateOrScriptNode.parentNode.removeChild(templateOrScriptNode)\n        })\n        entry.t = []\n        observer.disconnect()\n    }\n}","import { BindCallback, BindingEvent, ika } from \"../ika\"\nimport { ResourceManagerEvent } from \"../types/debug\"\n\nexport type IkaStatic = {\n    url: string,\n    options?: RequestInit,\n    headers: Headers, // Is response headers, not request headers\n    data: string\n}\n\nconst RESOURCE_MANAGER_GLOBAL_BINDING_PREFIX = 'ika:static'\n\nexport class ResourceManager {\n    constructor() { }\n\n    async request(nodeId: string, cb: BindCallback, url: string | URL, options?: RequestInit): Promise<void> {\n        const [urlString, globalBindingKey] = getUrlStringAndBindingKey(url)\n\n        if (!nodeId) {\n            ika.print(ResourceManagerEvent.RequesterHasNoId, urlString); return;\n        }\n\n        const hasCacheddata = this.#checkCache(globalBindingKey, options)\n        hasCacheddata && ika.print(ResourceManagerEvent.HasCachedData, url, options)\n\n        ika.reg.subscribeToBind(globalBindingKey, nodeId, (u) => wrappedCb(u, cb, options))\n\n        // If already cached, the callback will be called immediately by the binding subscription\n        if (hasCacheddata) return\n\n        ika.print(ResourceManagerEvent.MakingFetch, url, options)\n        const res = await fetch(url, options)\n        if (res.ok) {\n            const isJSONResponse = res.headers.get('content-type')?.includes('application/json')\n            this.cache(\n                urlString,\n                res.headers,\n                isJSONResponse ? await res.json() : await res.text(),\n                options\n            )\n        } else {\n            ika.print(ResourceManagerEvent.FetchFailed, url, options, res.status, await res.text())\n        }\n    }\n\n    cache(url: string | URL, headers: Headers, data, requestOptions?: RequestInit, fromStatic?: boolean) {\n        ika.print(ResourceManagerEvent.WritingIntoCache, url, requestOptions, data, fromStatic)\n\n        const [u, key] = getUrlStringAndBindingKey(url)\n        const cacheArray: ResourceCacheArray = [...(ika.reg.getBindValue(key) ?? [])]\n        const newEntry: ResourceCacheArray[number] = {\n            options: requestOptions,\n            headers: headers,\n            data: data\n        }\n        cacheArray.push(newEntry)\n        ika.reg.setBindValue(key, cacheArray)\n    }\n    #checkCache(key: string, options?: RequestInit) {\n        const cache: Array<Omit<IkaStatic, 'url'>> = ika.reg.getBindValue(key)\n        if (!cache) return null\n        return getMatchingRequest(cache, options)\n    }\n}\n\nfunction cleanOptions(options: RequestInit) {\n    if (!options) return null\n\n    const headers = { ...options.headers }\n    if (headers['Authorization']) { delete headers['Authorization'] }\n    return { ...options, headers: headers }\n}\n\nfunction wrappedCb(u: BindingEvent.ValueUpdate<Array<Omit<IkaStatic, 'url'>>>, cb: BindCallback, options?: RequestInit) {\n    // The global binding update will be called with all request options included\n    // The resource manager should trigger a callback only when request options match the initial request\n    const matchedRequestCache = getMatchingRequest(u.v, options)\n    matchedRequestCache && cb({ k: u.k, v: matchedRequestCache })\n}\n\ntype ResourceCacheArray = Array<Omit<IkaStatic, 'url'>>\n\nfunction getMatchingRequest(cacheArray: ResourceCacheArray, options?: RequestInit) {\n    const cleanedOptions = cleanOptions(options)\n    return cacheArray.find(cached =>\n        !options || KVsAreEqual(cached.options, cleanedOptions)\n    )\n    function KVsAreEqual(a, b) {\n        return Object.entries(a).every(([k, v]) =>\n            k in b && JSON.stringify(b[k]) == JSON.stringify(v)\n        )\n    }\n}\n\nfunction getUrlStringAndBindingKey(url: string | URL) {\n    const urlString = url instanceof URL ? url.href : url\n    const key = `${RESOURCE_MANAGER_GLOBAL_BINDING_PREFIX}:${urlString}`\n    return [urlString, key]\n}","import { ika } from \"../../ika\";\nimport { UnexpectedError } from \"../../types/debug\";\nimport { IkaComponent, IkaComponentOptions } from \"./ikaComponent\";\n\nexport type AttributeChangedHandler = (this: IkaComponent, name: string, oldVal: string, newVal: string) => void\n\nexport function addAttributeListener(this: IkaComponent, attributesWatched?: IkaComponentOptions['attributesWatched'], defaultCallback?: AttributeChangedHandler) {\n    if (!defaultCallback && (attributesWatched == null || Object.keys(attributesWatched).length == 0)) return;\n\n    const attributeNamesWatched = attributesWatched ? Object.keys(attributesWatched) : [];\n    const observer = new MutationObserver((mutations: Array<MutationRecord>, o: MutationObserver) => {\n        mutations.forEach(mutation => {\n            if (!validateMutationRecord(mutation, this, defaultCallback != null, attributeNamesWatched)) return\n            const oldVal = mutation.oldValue;\n            const newVal = mutation.target instanceof HTMLElement && mutation.target.getAttribute(mutation.attributeName);\n            getCallback.bind(this)(mutation.attributeName, attributesWatched, defaultCallback)(mutation.attributeName, oldVal, newVal);\n        });\n    });\n\n    const observerOptions: MutationObserverInit = {\n        attributes: true,\n        attributeOldValue: true\n    }\n    if (!defaultCallback) { observerOptions.attributeFilter = attributeNamesWatched }\n\n    observer.observe(this, observerOptions);\n\n    // Initialise the watched attributes\n    Array.from(this.attributes).forEach(attr => {\n        if (!defaultCallback && !(attr.name in attributesWatched)) return\n        getCallback.bind(this)(attr.name, attributesWatched, defaultCallback)(attr.name, null, attr.value)\n    })\n}\n\nfunction validateMutationRecord(m: MutationRecord, c: IkaComponent, hasDefaultCallback: boolean, attributeNamesWatched: Array<string>) {\n    if (m.type != 'attributes') {\n        ika.print(UnexpectedError.NotAttributeMutation, m)\n        return;\n    }\n    if (!hasDefaultCallback && !(attributeNamesWatched.includes(m.attributeName))) {\n        ika.print(UnexpectedError.NotAttributeMutation, m)\n        return;\n    }\n    if (!m.target.isSameNode(c)) {\n        ika.print(UnexpectedError.MutationTargetUnexpected, m);\n        return;\n    }\n    return true\n}\n\nfunction getCallback(this: IkaComponent, attributeName: string, attributesWatched: IkaComponentOptions['attributesWatched'], defaultCallback?: AttributeChangedHandler)\n    : AttributeChangedHandler {\n    return (attributesWatched && attributesWatched[attributeName] || defaultCallback).bind(this)\n}","import { ika } from \"../../ika\";\nimport { ComponentEvent } from \"../../types/debug\";\nimport { IkaComponentOptions } from \"./ikaComponent\";\n\nexport async function setComponentTemplate(templateId: string, initBundle?: IkaComponentOptions['bundle']['s']) {\n    const id = templateId || this.tagName.toLowerCase();\n    const name = this.tagName.toLowerCase();\n    const template = await ika.reg.getComponentTemplate(id) as HTMLTemplateElement;\n\n    if (!template || !(template instanceof HTMLTemplateElement)) {\n        console.error(`Error creating component ${name}:\\n A template with ID ${(id)} is not found.`);\n        return;\n    } else if (template.tagName !== 'TEMPLATE') {\n        throw new Error(`Template element with id ${id} is not a template`);\n    } else {\n        ika.print(ComponentEvent.Building, this)\n    }\n\n    const is = this.getAttribute('ika:is') || '_default';\n\n    if (!initBundle || !initBundle[is]) {\n        ika.print(ComponentEvent.NoStateDataWhenInitialising, this.tagName.toLowerCase(), is)\n    } else {\n        Object.entries(initBundle[is]).forEach(([key, value]) => this.setState(key, value));\n    }\n\n    const clonedNode = template.content.cloneNode(true) as DocumentFragment;\n    const notSlotChildNodes = Array.from(this.childNodes).filter(n => !(n instanceof Element) || (n instanceof Element && !n.hasAttribute('slot')))\n    this.attachShadow({ mode: 'open' }).append(clonedNode, ...notSlotChildNodes);\n}\n","import { ComponentCall, CustomEventTypes, ika, IkaComponent } from \"../../ika\";\nimport { IkaDebugStyles } from \"../../debug\";\nimport { ComponentEvent } from \"../../types/debug\";\n\n// export function processEvent(this: IkaComponent, e: Event | CustomEvent, handler: (e: Event | CustomEvent) => void) {\n//     switch (e.type) {\n//         case CustomEventTypes.ComponentCall:\n//             'detail' in e\n//                 ? processComponentCall.bind(this)(e)\n//                 : ika.print(ComponentEvents.ReceviedComponentCallNoDetail, componentName, e)\n//             break;\n//         default: e instanceof CustomEvent\n//             ? null\n//             : processStandardEvent.bind(this)(e);\n//     }\n// }\n\nexport function processComponentCall(this: IkaComponent, e: CustomEvent<ComponentCall.EventDetails>) {\n    const eventSource = e.composedPath()[0];\n\n    if (!checkIfShouldHandle.bind(this)(e)) return;\n    if (!(e instanceof CustomEvent)) {\n        ika.print(ComponentEvent.ReceviedComponentCallNoDetail, this.tagName.toLowerCase(), e);\n        return;\n    }\n\n    e.stopPropagation();\n\n    function checkIfShouldHandle(this: IkaComponent, e: Event | CustomEvent) {\n        // Ignore events fired off from the component itself\n        if (eventSource instanceof Node && eventSource.isSameNode(this)) { return false; }\n\n        // If the event is a component call and has non-zero leaps, it should go to a higher level component.\n        const leapTypes = [\n            ComponentCall.EventType.RegisterBind,\n            ComponentCall.EventType.DeregisterBind,\n            ComponentCall.EventType.GetComponent,\n            ComponentCall.EventType.InvokeFunction\n        ];\n\n        if (e.type == CustomEventTypes.ComponentCall && e instanceof CustomEvent && leapTypes.includes(e.detail.type)) {\n            const detail: ComponentCall.EventDetail.RegisterBind | ComponentCall.EventDetail.DeregisterBind = e.detail;\n            const leaps = detail.payload.leap;\n\n            if (Number.isInteger(leaps) && leaps > 0) {\n                detail.payload.leap--;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    switch (e.detail.type) {\n        case ComponentCall.EventType.RegisterBind: {\n            const payload = e.detail.payload;\n            const bind = payload.bind;\n            const issuer = payload.issuer;\n\n            if (!issuer.getNodeId || !issuer.bindValueChanged) {\n                throw `Component <${this.tagName.toLowerCase()}> received a register bind event, but the event issuer is not a binding component.`;\n            }\n\n            this.subscribeToBind.bind(this)(bind, issuer.getNodeId(), issuer.bindValueChanged.bind(issuer));\n            break;\n        }\n        case ComponentCall.EventType.DeregisterBind: {\n            const payload = e.detail.payload;\n            this.unsubscribeToBind.bind(this)(payload.issuer.getNodeId());\n            break;\n        }\n        case ComponentCall.EventType.EstablishChain: {\n            const payload = e.detail.payload;\n            if (['IKA-SDC'].includes(payload.issuer.tagName)) {\n                // @ts-ignore\n                (d.payload.issuer as IkaSDC).establishChainCb(e.composedPath(), c);\n            }\n            break;\n        }\n        case ComponentCall.EventType.GetComponent: {\n            const payload = e.detail.payload;\n            payload.cb(this);\n            break;\n        }\n        case ComponentCall.EventType.InvokeFunction: {\n            this.invokeFunction(e.detail.payload.key, e.detail.payload.invocationEvent, e.detail.payload.params);\n            break;\n        }\n        default: console.error(`Unrecognised component call type. The event call is %o`, e);\n    }\n}\n\nfunction processStandardEvent(this: IkaComponent, e: Event, c: IkaComponent) {\n    const functionkey = validateAndGetFunctionkey();\n    functionkey && c.invokeFunction(functionkey);\n\n    function validateAndGetFunctionkey() {\n        const clickSource = getElementWithIkaBFAttribute(e.composedPath());\n\n        if (!clickSource) return;\n\n        if (!clickSource.dataset || Object.entries(clickSource.dataset).length == 0) {\n            console.warn(`Element <${clickSource.tagName.toLowerCase()}> implemented ika:bf attribute but did not bind to a function.`);\n            return;\n        }\n\n        const functionKey = clickSource.dataset[e.type];\n        if (!functionKey) {\n            ika.debug(`No bind function is specified for event type %c${e.type}%c in element %c<${clickSource.tagName.toLowerCase()}>`,\n                [IkaDebugStyles.VariableValue, 'color: unset', IkaDebugStyles.ComponentName]);\n            return;\n        }\n\n        return functionKey;\n    }\n\n    function getElementWithIkaBFAttribute(path: Array<EventTarget>) {\n        for (const element of path) {\n            if (element instanceof HTMLElement && element.hasAttribute('ika:bf')) {\n                return element\n            }\n        }\n\n    }\n}","import { CustomEventTypes, ika } from \"../../ika\";\nimport { processComponentCall } from \"./processEvent\";\nimport { ComponentEvent } from \"../../types/debug\";\nimport { IkaComponent } from \"./ikaComponent\";\n\nexport function addEventListeners(this: IkaComponent, eventBinds: { [eventType: string]: (e: Event | CustomEvent) => void; }) {\n    if (!eventBinds) { eventBinds = {}; };\n    eventBinds[CustomEventTypes.ComponentCall] = processComponentCall;\n\n    Object.entries(eventBinds).forEach(([eventType, handler]) => {\n        this.addEventListener(eventType, (e) => eventHandlerWrapper.bind(this)(e, handler));\n    });\n\n    function eventHandlerWrapper(this: IkaComponent, e: Event | CustomEvent, handler: (e: Event | CustomEvent) => void) {\n        const eventSource = e.composedPath()[0];\n\n        if (!(eventSource instanceof HTMLElement)) {\n            ika.print(ComponentEvent.ReceivedEventNotFromElement, eventSource); return;\n        } else {\n            ika.print(ComponentEvent.ReceivedEvent, this.tagName.toLowerCase(), e);\n        }\n\n        handler.bind(this)(e);\n    }\n}\n","import BindingComponent, { registerBind } from \"../../core/bind\";\nimport StateBindRegister from \"../../core/sbr\";\nimport { BindCallback, BindingEvent, ika, IkaInitObject, IKA_VERSION } from \"../../ika\";\nimport { attachDebugButton } from \"../../debug\";\nimport { addAttributeListener, AttributeChangedHandler } from \"./addAttributeListener\";\nimport { setComponentTemplate } from \"./setComponentTemplate\";\nimport { ComponentEvent } from \"../../types/debug\";\nimport { addEventListeners } from \"./addEventListeners\";\n\nexport type IkaComponentOptions = {\n    templateId?: string,\n    bundle?: IkaInitObject[string],\n    construct?: (this: IkaComponent, c: IkaComponent) => void,\n    eventBinds?: { [eventType: string]: (e: Event | CustomEvent) => void },\n    connectedCallback?: (c: IkaComponent) => void;\n    disconnectedCallback?: (c: IkaComponent) => void;\n    adoptedCallback?: (c: IkaComponent) => void;\n    attributesWatched?: { [type: string]: AttributeChangedHandler }\n    attributeChangedCallback?: AttributeChangedHandler,\n    noTemplate?: boolean\n}\n\nconst BIND_ATTRIBUTE_FLAG = 'ika:b';\n\nexport class IkaComponent extends BindingComponent {\n    #stateBinds: StateBindRegister;\n    #options: IkaComponentOptions = {}\n    #methods = {}\n    #onNodeRegisteredQueue: Array<any> = []\n    #constructCompleted: Promise<any>;\n\n    constructor(options: IkaComponentOptions) {\n        super();\n        let constructCompletedResolver;\n        this.#constructCompleted = new Promise(r => constructCompletedResolver = r)\n\n        this.#stateBinds = new StateBindRegister(this)\n        this.#methods = options?.bundle?.m\n        this.#options = options || {}\n\n        this.#options.attributesWatched ??= {}\n        this.#options.attributesWatched[BIND_ATTRIBUTE_FLAG] = ikaBAttributeChangeHandler\n\n        addEventListeners.bind(this)(options?.eventBinds)\n\n        const wrappedPostTemplateActions: () => void = postTemplateActions.bind(this)\n        options?.noTemplate\n            ? wrappedPostTemplateActions()\n            : setComponentTemplate.bind(this)(options?.templateId, options?.bundle?.s)\n                .then(wrappedPostTemplateActions)\n\n        function postTemplateActions(this: IkaComponent) {\n            addAttributeListener.bind(this)(this.#options.attributesWatched, options?.attributeChangedCallback)\n\n            try {\n                options?.construct && options.construct.bind(this)(this)\n                // Unify this with link state node registration request? Not sure what happens when both are called\n                if (this.#onNodeRegisteredQueue.length > 0) {\n                    ika.reg.registerNode(this, this, this.registeredCallback)\n                }\n                constructCompletedResolver()\n\n                IKA_CONFIG.debugMode && attachDebugButton(this)\n                ika.print(ComponentEvent.Built, this)\n            } catch (e) {\n                // TO ADD: If construct fails, print error and give option to resolve construct is completed anyway,\n                //         so that bundled functions can be invoked even if construct script is not run successfully.\n            }\n        }\n\n    }\n\n    connectedCallback() { this.runLifecycleMethodIfExists('connectedCallback') }\n    disconnectedCallback() { this.runLifecycleMethodIfExists('disconnectedCallback') }\n    adoptedCallback() { this.runLifecycleMethodIfExists('adoptedCallback') }\n\n    runLifecycleMethodIfExists(name: 'connectedCallback' | 'disconnectedCallback' | 'adoptedCallback') {\n        if (name in this.#options) { this.#options[name](this) }\n    }\n\n    getIkaVersion() { return IKA_VERSION }\n\n    registeredCallback(id: string, n: Element, requestor: BindingComponent) {\n        requestor.setNodeId(id)\n        requestor.registerBindsWithParentComponent.bind(requestor)()\n        //@ts-ignore\n        requestor.getOnNodeRegisteredQueue().forEach(cb => cb())\n    }\n\n    registerBindsWithParentComponent() {\n        const isGlobalBind = this.hasAttribute('global')\n        Object.values(this.dataset).forEach(bind => {\n            registerBind({\n                requester: this as any,\n                bind: bind,\n                global: isGlobalBind,\n            })\n        })\n    }\n\n    async invokeFunction(name: string, ...args: Array<any>) {\n        await this.#constructCompleted\n\n        if (!this.#methods || !this.#methods[name]) {\n            console.warn(`Check that the function binding \"${name}\" is correct, as it is not found for the component.`);\n            return;\n        }\n        try {\n            return this.#methods[name].bind(this)(...args)\n        } catch (e) {\n            console.error(`Error while invoking function \"${name}\" on component <${this.tagName.toLowerCase()}>`, e)\n        }\n    }\n\n    async subscribeToBind(k: string, id: string, cb: BindCallback) { this.#stateBinds.subscribeToBind(k, id, cb) }\n    unsubscribeToBind(id: string, k?: string) { this.#stateBinds.unsubscribeToBind(id, k) }\n    bindValueChanged(update: BindingEvent.ValueUpdate) {\n        const statesToUpdate = Object.entries(this.dataset).filter(([state, bind]) => update.k == bind)\n        // States to update should only be 1 entry, since it does not make sense to bind multiple states to the same parent state\n        statesToUpdate.forEach(([state, bind]) => this.setState(state, update.v))\n    }\n\n    getState(key: string) { return this.#stateBinds.getValue(key) }\n    setState(key: string, val) { val !== undefined && this.#stateBinds.setValue(key, val) }\n    linkState(this: IkaComponent, baseKey: string, transformation: (v: any) => any, linkedKey?: string) {\n        this.#onNodeRegisteredQueue.push(link.bind(this))\n        if (!this.getNodeId()) { ika.reg.registerNode(this, this, this.registeredCallback) }\n\n        function link(this: IkaComponent) {\n            const boundTransformation = linkedKey\n                ? (update) => this.setState(linkedKey, transformation.bind(this)(update.v))\n                : (update) => transformation.bind(this)(update.v);\n\n            this.subscribeToBind(baseKey, this.getNodeId(), boundTransformation)\n        }\n    }\n\n    getOnNodeRegisteredQueue() { return [...this.#onNodeRegisteredQueue] }\n    onNodeRegistered(cb: () => void) {\n        if (this.getNodeId()) { cb.bind(this)(); return }\n        this.#onNodeRegisteredQueue.push(cb.bind(this))\n    }\n\n    getRegistrationTargets(): Array<Element> { return [] }\n\n    debugPrint() { console.log(this.#stateBinds.listStates()) }\n}\n\nfunction ikaBAttributeChangeHandler(this: IkaComponent, n, o, v) {\n    if (this.hasAttribute(BIND_ATTRIBUTE_FLAG)) {\n        if (!this.getNodeId()) {\n            ika.reg.registerNode(this, this, this.registeredCallback)\n        } else {\n            this.registerBindsWithParentComponent()\n        }\n    }\n}","import { IkaDebugStyles } from \"../../debug\"\nimport { ika } from \"../../ika\"\nimport { IkaComponentOptions, IkaComponent } from \"./ikaComponent\"\n\nexport function defineIkaComponent(componentName: string, options?: IkaComponentOptions) {\n    try {\n        customElements.define(componentName, class extends IkaComponent {\n            constructor() {\n                super(options)\n            }\n        })\n    } catch (e) {\n        if (e.code == 9) { // DOMException: NotSupportedError\n            ika.debug(`Element %c${componentName}%c is already defined. Now potentially using a new template.`,\n                [IkaDebugStyles.ComponentName, 'color: unset'])\n        } else { throw e }\n    }\n}","performance.mark('ika-init')\n\nimport { IkaBuffer, processBuffer } from './core/buf'\nimport IkaSDC from './components/sdc';\nimport { InitBundle } from './core/init';\nimport IkaRegistry from './core/reg';\nimport { ComponentCall, CustomEventTypes } from './types'\nimport { IkaA, IkaAB, IkaB, IkaBF, IkaImport, IkaME, IkaRoute } from './components';\nimport IkaDebug, { printDebugMessage } from './debug';\nimport { DebugFilter, IkaStatus } from './types/debug';\nimport { ResourceManager } from './core/res';\n\nexport * from './types'\nexport { getParentIkaComponent } from './core/bind'\nexport { IkaComponent, IkaComponentOptions, defineIkaComponent } from './components/IkaComponent';\nexport { ResourceManager } from './core/res'\n\nexport { BindingDictionary, TransformationFunction } from './components/me/types'\n\ntype IkaConfig = {\n    UPS?: number,\n    verbose?: boolean,\n    suppressMessages?: Array<DebugFilter>,\n    filterMessages?: Array<DebugFilter>,\n    debugMode?: 'each' | 'bar',\n    locale?: 'en-gb',\n    unprotected?: boolean\n}\n\ndeclare global {\n    // const IKA_UPS: number\n    const IKA_CONFIG: IkaConfig\n    interface Window {\n        IKA_CONFIG: IkaConfig\n        IKA_ROUTE_CONFIG\n    }\n}\n\nexport const IKA_VERSION = '0.2.0'\nexport const ika = {\n    debug: IkaDebug,\n    print: printDebugMessage,\n    buffer: new IkaBuffer(),\n    reg: new IkaRegistry(),\n    data: new InitBundle(),\n    ResourceManager: new ResourceManager(),\n}\n\ninitIka()\n\nfunction initIka() {\n    validateIkaConfig()\n\n    ika.print(IkaStatus.Initialising, IKA_VERSION)\n\n    boundaryMonitoring()\n    importIkaComponents()\n    startBufferProcessing()\n\n    performance.measure('ika-init-complete', 'ika-init')\n\n    function validateIkaConfig() {\n        const IKA_DEFAULT_CONFIG: IkaConfig = {\n            UPS: 60,\n            locale: 'en-gb'\n        }\n\n        window.IKA_CONFIG ??= {}\n        window.IKA_ROUTE_CONFIG ??= { rules: [] }\n\n        Object.entries(IKA_DEFAULT_CONFIG).forEach(([key, value]) => {\n            window.IKA_CONFIG[key] ??= value\n        })\n        if (!window.IKA_CONFIG.unprotected) { Object.freeze(window.IKA_CONFIG) }\n    }\n\n    function importIkaComponents() {\n        customElements.define('ika-a', IkaA)\n        customElements.define('ika-b', IkaB)\n        customElements.define('ika-bf', IkaBF)\n        customElements.define('ika-me', IkaME)\n        customElements.define('ika-import', IkaImport)\n        customElements.define('ika-ab', IkaAB)\n        customElements.define('ika-sdc', IkaSDC)\n        customElements.define('ika-route', IkaRoute)\n    }\n\n    function startBufferProcessing() {\n        document.addEventListener('DOMContentLoaded', (e) => {\n            setInterval(processBuffer, 1000 / IKA_CONFIG.UPS);\n        })\n        ika.print(IkaStatus.BufferStart)\n    }\n    function boundaryMonitoring() {\n        // const MAX_RETRIES = 5 as const\n\n        document.addEventListener(CustomEventTypes.ComponentCall, (e: CustomEvent<ComponentCall.EventDetails>) => {\n            console.warn(`Ika event was not caught and has reached document boundary.`);\n            console.log(e)\n        })\n    }\n}\n\nexport function elementIsIkaComponent(e: Element) {\n    return typeof Object.getPrototypeOf(e)['getIkaVersion'] == 'function' && Object.getPrototypeOf(e)['getIkaVersion']() == IKA_VERSION\n}","export class InitBundle {\n    #data = {}\n\n    constructor() { }\n    add(cn: string, bundle) {\n        if (typeof cn != 'string') {\n            throw 'Initialisation bundle object must have a string component name.';\n        }\n        this.#data[cn] = bundle;\n    }\n    get(cn: string) {\n        // Not deep cloned! For safety, should be copied.\n        return this.#data[cn];\n    }\n}\n","\nimport { ika } from '../ika'\nimport { UpdateType } from '../types/buffer';\nimport { BindingEvent } from '../types/events'\nimport BindingComponent from '../core/bind';\n\nexport default class IkaB extends BindingComponent {\n    constructor() {\n        super();\n    }\n\n    bindValueChanged(update: BindingEvent.ValueUpdate) {\n        ika.buffer.push({\n            n: this.getNodeId(),\n            type: UpdateType.PROP,\n            v: update.v,\n            k: this.hasAttribute('allow-html') ? 'innerHTML' : 'textContent'\n        })\n    }\n}\n","import { ika } from \"../ika\";\nimport { UpdateType } from \"../types/buffer\";\nimport { BindingEvent } from \"../types/events\";\nimport BindingComponent, { getParentIkaComponent, registerBind } from \"../core/bind\";\nimport { BindEvent } from \"../types/debug\";\nimport IkaMapElements from \"./me\";\n\n\nexport default class IkaAttributeBind extends BindingComponent {\n    #attrBinds: Array<[attr: string, bind: string]> = []\n    #childIds: { [id: string]: Element } = {}\n\n    constructor() {\n        super();\n        this.processBinds.bind(this)()\n        this.hasAttribute('unwrap') && this.before(...this.childNodes)\n    }\n\n    async processBinds() {\n        const context = this.hasAttribute('context')\n            ? (await getParentIkaComponent(this, true)).getState(this.getAttribute('context'))\n            : null\n        this.#attrBinds = Object.entries(this.dataset).map(([attr, bind]) => [\n            attr.replace(/[A-Z]/, `-$&`),\n            context ? `${bind}_${context}` : bind\n        ])\n    }\n\n    getRegistrationTargets(): Array<Element> {\n        return [this, ...this.children]\n    }\n\n    registeredCallback(id: string, n: Element, r: IkaAttributeBind) {\n        if (n.isSameNode(r)) {\n            r.setNodeId(id)\n            r.registerBindsWithParentComponent.bind(r)()\n        } else {\n            r.setChildId.bind(r)(id, n);\n        }\n    }\n\n    setChildId(id: string, n: Element) {\n        this.#childIds[id] = n;\n        if (n.tagName.includes('-')) {\n            customElements.whenDefined(n.tagName.toLowerCase()).then(() => {\n                if (n instanceof BindingComponent || n instanceof IkaMapElements) { n.setNodeId(id) }\n            })\n        }\n    }\n\n    registerBindsWithParentComponent() {\n        this.#attrBinds.forEach(([attr, bind]) => {\n            registerBind({\n                requester: this,\n                bind: bind,\n                global: this.hasAttribute('global')\n            })\n        })\n    }\n\n    bindValueChanged(update: BindingEvent.ValueUpdate) {\n        // Multiple attributes could be bound to a single state key\n        const targetAttributes = this.#attrBinds.filter(([attr, bind]) => bind == update.k).map(([attr, bind]) => attr)\n        // const context = this.getAttribute('context')\n\n        ika.print(BindEvent.IkaABReceivedBindingUpdate, this, update.k, update.v, targetAttributes, this.#childIds)\n\n        Array.from(this.children).length != Object.keys(this.#childIds).length\n            && ika.debug(`<ika-ab> current children do not match number of childIds. They may have been moved out of <ika-ab>'s child nodes.`)\n\n        targetAttributes.forEach(attr => {\n            Object.keys(this.#childIds).forEach(id => {\n                const isProp = attr.charAt(0) == '.'\n                ika.buffer.push({\n                    n: id,\n                    type: isProp ? UpdateType.PROP : UpdateType.ATTR,\n                    k: isProp ? attr.substring(1) : attr,\n                    v: update.v\n                })\n            })\n        })\n    }\n}"],"names":["UpdateType","NodeEvent","BindEvent","ComponentEvent","IkaStatus","UnexpectedError","ImportEvent","MapElementEvent","BufferEvent","RouterEvent","ResourceManagerEvent","__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","processBuffer","entries","forEach","nodeId","updates","target","PROP","val","pop","ATTR","nodeType","Node","ELEMENT_NODE","setAttribute","toString","QueueLock","constructor","this","queue","Promise","resolve","reject","push","length","next","shift","getEventSourceAndTagName","e","eventSource","composedPath","tagName","HTMLElement","toLowerCase","DEBUG_MESSAGES","Registered","node","id","s","css","Deregistered","AlreadyRegistered","mode","NodeAlreadyHasId","element","BindingElementHasNoBindKey","InitiatingBinding","componentName","parentName","ReceivedBindingRequest","RegisteringBinding","DeregisteringBinding","Subscribed","BindingPermissionDenied","BindingValueChanged","source","value","callbackCount","Set","has","ReceivedBindingUpdate","IkaABReceivedBindingUpdate","ref","bind","attributes","targets","children","values","join","NoBindingValueUpdateHandler","NoParentFound","UnregisteredNodeSubscribing","k","Building","component","NoStateDataWhenInitialising","instanceSpace","Built","ReceivedEvent","customType","CustomEvent","detail","type","customTypeMsg","ReceivedEventNotFromElement","ReceviedComponentCallNoDetail","Initialising","versionNumber","BufferStart","Math","round","performance","measure","duration","NotAttributeMutation","m","UnwatchedAttribute","MutationTargetUnexpected","ImportWithSameTemplateID","templateId","importPath","ImportComponentWithNoMD5","path","RemovedNode","nodes","record","msg","n","flatMap","mr","removedNodes","ImportedNodes","t","AwaitCustomElementDefinitionTimeout","elementName","timeoutLimit","MappingInitiated","count","NoBindingDictionary","stateVar","UnexpectedBDType","bdFunction","UnexpectedBDStateObject","UnexpectedBDOutputType","output","UnexpectedBDOutputValue","v","NoMapFrom","mfKey","UnexpectedMFType","mappingValue","NestedIkaMEHasISAttr","StateMappingNotOnIkaComponent","bd","UnexpectedData","update","OverwritingKey","router","FetchFailed","url","options","status","body","HasCachedData","MakingFetch","WritingIntoCache","data","fromStatic","RequesterHasNoId","CustomEventTypes","ComponentCall","IkaDebugStyles","EventType","BindingComponent","super","getRegistrationTargets","registeredCallback","requestor","setNodeId","registerBindsWithParentComponent","setComponent","getComponent","getNodeId","bindKey","getAttribute","registerBind","requester","global","hasAttribute","deregisterBindsWithParentComponent","deregisterBind","onParentComponentLoaded","bindValueChanged","async","parentComponent","getParentIkaComponent","parentComponentName","customElements","whenDefined","then","dispatchEvent","getRegistrationEvent","initState","getState","console","error","log","sendMsgAndInit","warn","register","leap","Number","parseInt","RegisterBind","DeregisterBind","payload","issuer","isNaN","bubbles","composed","cancelable","c","ignoreLeap","Element","leaps","parentCustomElement","i","getParentCustomElement","start","parent","elementIsIkaComponent","isCustomComponent","hasParent","parentElement","parentNode","host","includes","IkaStateDependentContainer","addEventListener","addDependentSDC","isChildSdcOfAffectedSdc","some","b","hasDependentSdcs","EstablishChain","isSameNode","dependentElement","establishChainCb","unshift","establishChainEvent","sdt","getElement","document","getElementsByTagName","stc","tamc","template","dataset","a","HTMLTemplateElement","clonedNode","content","cloneNode","replaceChildren","childNodes","collection","filter","result","Array","from","arr","tag","checkIfMoreThanOne","InsertionOption","DocumentCreateElement","createElement","ObjectEntriesForEach","object","setBind","is","deregister","param","postMappingOperations","PostMappingOption","Aside","Remove","asideContainer","firstChild","before","appendChild","removeChild","validateOutputAndApply","index","applyFn","attr","mapChildren","cn","bdKey","mapArray","subKey","insertionMethod","insertionTarget","fragment","DocumentFragment","newElement","states","IkaComponent","transformationFn","setState","printException","applyBindingDictionary","isArray","subKeyElement","cnKey","subBdKey","map","getSubKeyArray","Child","insertedNodes","Before","insertBefore","observedAttributes","IkaMapElements","marker","method","attributeChangedCallback","attrName","oldVal","newVal","mf","r","isConnected","bdEntry","unexpectedBdValue","find","validateBd","getMapArray","mappedNodes","postMappingMode","StateBindRegister","listStates","IKA_CONFIG","debugMode","subscribeToBind","cb","newCbRecord","bindRecord","p","rw","rejectIfNotPermissioned","unsubscribeToBind","keys","entry","clearDeregisteredNode","mark","bindEntries","bindsCount","getValue","nodeIdHasReadPermission","deleteNodeFromBindRecords","setValue","hasPermission","checkIfPermissionedForRW","assign","setPermissions","ar","u","cleanInvokeCbs","permissions","out","copyPermissionObject","generateIdString","threads","res","str","j","base","floor","random","bump","String","fromCharCode","all","routeCurrentLocation","window","location","pathname","search","hash","IKA_ROUTE_CONFIG","rootKey","replaceState","IkaA","onclick","resourcePath","getElementById","innerHTML","IkaBindToFunction","eventType","processDataAttribute","MutationObserver","handleAttributeChange","observe","attributeOldValue","records","attributeName","name","startsWith","slice","handleEvent","preventDefault","sendEventToComponent","eventDetails","InvokeFunction","invocationEvent","isInteger","componentCall","IkaImport","importsContainer","head","append","moveSelfToHead","URL","href","match","fetch","reinsertScripts","doc","scripts","newScript","text","setNamedItem","remove","moveIkaTemplates","sourceUrl","noTemplates","getContainer","d","templates","querySelectorAll","container","ok","setError","contentMIME","headers","DOMParser","parseFromString","querySelector","IkaRoute","initRoute","setRoute","JSON","parse","textContent","ResourceManager","cache","processStatic","bodyNodes","headNodes","registryEntry","mutList","observer","removeMuts","mut","findIndex","splice","templateOrScriptNode","disconnect","processMut","childList","ownerDocument","topOfElementFromTopOfViewport","getBoundingClientRect","top","innerHeight","scrollToMark","scrollIntoView","behavior","block","urlString","globalBindingKey","getUrlStringAndBindingKey","hasCacheddata","matchedRequestCache","getMatchingRequest","wrappedCb","isJSONResponse","json","requestOptions","cacheArray","newEntry","cleanedOptions","cleanOptions","cached","every","stringify","addAttributeListener","attributesWatched","defaultCallback","attributeNamesWatched","mutations","mutation","hasDefaultCallback","validateMutationRecord","oldValue","getCallback","observerOptions","attributeFilter","setComponentTemplate","initBundle","Error","notSlotChildNodes","attachShadow","processComponentCall","leapTypes","GetComponent","checkIfShouldHandle","stopPropagation","invokeFunction","params","addEventListeners","eventBinds","eventHandlerWrapper","handler","constructCompletedResolver","bundle","ikaBAttributeChangeHandler","wrappedPostTemplateActions","construct","debugBox","btn","debugPrint","shadowRoot","attachDebugButton","noTemplate","connectedCallback","runLifecycleMethodIfExists","disconnectedCallback","adoptedCallback","getIkaVersion","IKA_VERSION","getOnNodeRegisteredQueue","isGlobalBind","args","state","undefined","linkState","baseKey","transformation","linkedKey","boundTransformation","onNodeRegistered","defineIkaComponent","define","code","debug","objects","verbose","matchAll","print","locale","colours","suppressMessages","filterMessages","apply","buffer","buf","checkAndInit","getBuffer","cloneFrom","typeGrouping","keyArr","cloneBuffer","resetBuffer","reg","getPathMD5","templateText","encoded","crypto","subtle","digest","TextEncoder","encode","Uint8Array","padStart","getSHA1Hash","hasImport","registerImport","addTemplateNode","addBodyNodes","TEXT_NODE","addScriptNodes","getImportRegisterByPath","resolver","getTemplate","templateInserted","setBindValue","getBindValue","registerNode","shouldRegisterNode","existingRegistration","getNewIdThenInvokeCallback","getNodeFromId","deregisterNode","getRegistry","newId","registerRouter","init","unprotected","freeze","unregisterRouter","unsetAnchorListener","ruleState","anchor","config","matchedRule","rules","RegExp","test","resourceDir","stateFunction","getStateFromRule","getResourcePathAndState","searchParams","force","history","setPath","getRoute","setAnchorListener","AbortController","src","HTMLAnchorElement","routeTarget","signal","abort","add","getPrototypeOf","UPS","processBinds","context","replace","setChildId","targetAttributes","isProp","charAt","substring","setInterval"],"sourceRoot":""}